(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    203628,       5549]
NotebookOptionsPosition[    184030,       5241]
NotebookOutlinePosition[    184567,       5261]
CellTagsIndexPosition[    184524,       5258]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["User Guide for the DDF Package", "Title",
 CellChangeTimes->{{3.928470621183725*^9, 3.9284706284197817`*^9}, {
  3.9284709343503847`*^9, 3.928470936858696*^9}, {3.928475669678461*^9, 
  3.9284756726672497`*^9}, {3.928490237067464*^9, 3.928490242765825*^9}, {
  3.92855059702733*^9, 3.9285506016028957`*^9}, {3.928916029539754*^9, 
  3.928916031283222*^9}},ExpressionUUID->"324eedc2-fcfb-4ef8-9ebd-\
67744a40b034"],

Cell["\<\
This Mathematica notebook is the user guide for the DDF Package.
It explains the main features of the package and gives some useful examples.\
\>", "Text",
 CellChangeTimes->{{3.928490245759338*^9, 3.928490264792729*^9}, {
  3.928491154231791*^9, 3.9284911642646437`*^9}, {3.92850182594275*^9, 
  3.928501826413848*^9}, {3.92855060547344*^9, 3.9285506278484783`*^9}, {
  3.928916034794331*^9, 3.928916035985242*^9}, {3.928975420406423*^9, 
  3.928975430659773*^9}},ExpressionUUID->"0bc06f1b-6744-482e-8275-\
2939b6c1ef08"],

Cell["\<\
The DDF Package facilitates the DDF construction of the Feingold-Frenkel \
algebra. 
It calculates DDF states and their commutators, and then re-expresses them as \
DDF states.
Additionally, the package provides several operators that act on DDF states.\
\>", "Text",
 CellChangeTimes->{{3.92850182800244*^9, 3.928501849732148*^9}, {
  3.928501882938006*^9, 3.928502009109819*^9}, {3.92850266283356*^9, 
  3.928502805491031*^9}, {3.928502856574509*^9, 3.928502935386322*^9}, {
  3.929069510877801*^9, 3.929069512710553*^9}, {3.929069609830082*^9, 
  3.929069611100951*^9}, {3.929069719311163*^9, 3.929069920286687*^9}, {
  3.92906998138115*^9, 3.929069999405267*^9}, {3.929093184469652*^9, 
  3.929093184875764*^9}},ExpressionUUID->"91cf96d2-4143-4ade-ae72-\
b66f0ce2fee2"],

Cell["\<\
The functions defined in the DDF package are derived from the papers [1, 2] \
and adjusted to the Feingold-Frenkel algebra F .\
\>", "Text",
 CellChangeTimes->{{3.9289754567605047`*^9, 3.928975475434527*^9}, {
  3.92907005967457*^9, 
  3.929070098942525*^9}},ExpressionUUID->"6e350127-321e-4056-86d1-\
eb2e46d6488d"],

Cell["\<\
\t[1] R.W. Gebert and H. Nicolai, On E(10) and the DDF construction, Commun. \
Math. Phys. 172 (1995), 571-622, arXiv:hep-th/9406175.\
\>", "Text",
 CellChangeTimes->{3.92897548471989*^9, 
  3.929070049725246*^9},ExpressionUUID->"ec3611f0-241a-40e1-8304-\
9fc300427f18"],

Cell["\<\
\t[2] R.W. Gebert and H. Nicolai, An Affine string vertex operator \
construction at arbitrary level, J. Math. Phys. 38 (1997), 4435-4450, \
arXiv:hep-th/9608014.\
\>", "Text",
 CellChangeTimes->{3.928975489745656*^9, 
  3.9290700510975447`*^9},ExpressionUUID->"65046266-77ce-4abc-9c3a-\
55e8f49f46e8"],

Cell["\<\

Copyright \[Copyright] 2024 
Hannes Malcha\
\>", "Text",
 CellChangeTimes->{{3.928975920849*^9, 3.928975930301156*^9}, {
  3.9290701069519444`*^9, 3.929070133739221*^9}, {3.933993333575055*^9, 
  3.933993335198052*^9}},ExpressionUUID->"0b8011ca-3524-4e3d-8b1e-\
b0e782a9271f"],

Cell[CellGroupData[{

Cell["Preliminaries", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.928491178238084*^9, 
  3.928491181883389*^9}},ExpressionUUID->"de116a59-eea6-4f5d-be24-\
e8bd670b37bc"],

Cell[TextData[{
 "The DDF Package consists of the package file ",
 StyleBox["ddf.wl",
  FontWeight->"Bold"],
 " as well as the folders ",
 StyleBox["ddf_states",
  FontWeight->"Bold"],
 " and ",
 StyleBox["schur_polynomials",
  FontWeight->"Bold"],
 ".",
 StyleBox[" ",
  FontWeight->"Bold"],
 "The folders contain a plethora of",
 StyleBox[" ",
  FontSlant->"Italic"],
 ".txt and .wls files with pre computed expressions for DDF states and Schur \
polynomials. For the package to function properly it is important that the ",
 StyleBox["ddf.wl",
  FontWeight->"Bold"],
 " package file and the ",
 StyleBox["ddf_states",
  FontWeight->"Bold"],
 " and ",
 StyleBox["schur_polynomials",
  FontWeight->"Bold"],
 " folders are placed in the same directory. Also this user guide must be \
placed in the same directory as the ",
 StyleBox["ddf.wl",
  FontWeight->"Bold"],
 " package file."
}], "Text",
 CellChangeTimes->{{3.92849118422504*^9, 3.928491352365651*^9}, {
  3.928916122562904*^9, 3.928916164007935*^9}, {3.928916202685401*^9, 
  3.928916314890191*^9}, {3.928975593380903*^9, 3.928975654161637*^9}, {
  3.929070157823678*^9, 3.929070167418751*^9}, {3.9290702041836977`*^9, 
  3.929070260589541*^9}, {3.929093189939591*^9, 
  3.9290931906694*^9}},ExpressionUUID->"1b3faa08-53f3-42e3-b118-31fb5a12a5be"],

Cell["We then set Notebook directory as the current directory.", "Text",
 CellChangeTimes->{{3.928491362571072*^9, 3.928491405275058*^9}, {
  3.928975676088348*^9, 
  3.928975683227806*^9}},ExpressionUUID->"e866583a-ac64-4e08-9a61-\
6879112af542"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]], "Input",
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[1]:=",ExpressionUUID->"406a4a49-8ea8-4f8d-9cda-cc49c6d17352"],

Cell["\<\
Since many functions in the DDF package are defined recursively it is \
advisable to increase the recursion limit.\
\>", "Text",
 CellChangeTimes->{{3.928491412684495*^9, 3.9284914518628902`*^9}, {
  3.9289756809891033`*^9, 
  3.928975684218193*^9}},ExpressionUUID->"00016a96-888a-4b5d-aa94-\
daf4dbfa0621"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$RecursionLimit", "=", "100000"}], ";"}]], "Input",
 CellChangeTimes->{{3.928740363282144*^9, 3.928740364529834*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[2]:=",ExpressionUUID->"9d608f72-37b6-4f5b-8d18-7ab7d0a7e43c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loading the DDF Package", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.928491178238084*^9, 3.928491181883389*^9}, {3.928491462458601*^9, 
  3.928491465772522*^9}, {3.928975730417605*^9, 
  3.928975731436939*^9}},ExpressionUUID->"47d4eac4-951e-44e9-a076-\
c92b2de377ec"],

Cell["To load the package we write ...", "Text",
 CellChangeTimes->{{3.928491467184018*^9, 3.928491478151562*^9}, 
   3.928807802707741*^9, {3.928975669623941*^9, 
   3.928975690968017*^9}},ExpressionUUID->"e699c60e-dd05-4208-af78-\
50b5af77c449"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<ddf.wl\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.928737351094786*^9, 3.928737355282015*^9}, {
   3.928739465511385*^9, 3.928739468151733*^9}, {3.928739561455933*^9, 
   3.928739563045072*^9}, 3.928739597187398*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[3]:=",ExpressionUUID->"ddbe26cb-cedd-4f3a-a2a1-cfa03393e49a"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Successfully loaded the DDF package.\"\>"], "Print",
 CellChangeTimes->{3.929093716979047*^9, 3.929337609187085*^9, 
  3.930794794588256*^9, 3.930796901476465*^9, 3.931242836100671*^9, 
  3.93132017402244*^9, 3.931337392109563*^9, 3.9330688606739388`*^9, 
  3.9330690008309298`*^9, 3.933993336277227*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"613b949d-a297-41fe-b1a3-23cfdc380b7e"],

Cell[BoxData["\<\"All equations and relations used in this package are \
derived from the papers [1,2] and appropriately adjusted to the \
Feingold-Frenkel algebra F.\"\>"], "Print",
 CellChangeTimes->{3.929093716979047*^9, 3.929337609187085*^9, 
  3.930794794588256*^9, 3.930796901476465*^9, 3.931242836100671*^9, 
  3.93132017402244*^9, 3.931337392109563*^9, 3.9330688606739388`*^9, 
  3.9330690008309298`*^9, 3.9339933362784357`*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"08f56a1d-5524-4ba3-9c53-8d29adb2e1cf"],

Cell[BoxData["\<\"[1] R.W. Gebert and H. Nicolai, On E(10) and the DDF \
construction, Commun. Math. Phys. 172 (1995), 571-622, \
arXiv:hep-th/9406175.\"\>"], "Print",
 CellChangeTimes->{3.929093716979047*^9, 3.929337609187085*^9, 
  3.930794794588256*^9, 3.930796901476465*^9, 3.931242836100671*^9, 
  3.93132017402244*^9, 3.931337392109563*^9, 3.9330688606739388`*^9, 
  3.9330690008309298`*^9, 3.933993336281169*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"d5171ab1-8c49-43a4-90e9-b3a519f22d94"],

Cell[BoxData["\<\"[2] R.W. Gebert and H. Nicolai, An Affine string vertex \
operator construction at arbitrary level, J. Math. Phys. 38 (1997), \
4435-4450, arXiv:hep-th/9608014.\"\>"], "Print",
 CellChangeTimes->{3.929093716979047*^9, 3.929337609187085*^9, 
  3.930794794588256*^9, 3.930796901476465*^9, 3.931242836100671*^9, 
  3.93132017402244*^9, 3.931337392109563*^9, 3.9330688606739388`*^9, 
  3.9330690008309298`*^9, 3.933993336282447*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"3a11240a-5d4c-4b0b-b0b3-0d36190d594d"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.929093716979047*^9, 3.929337609187085*^9, 
  3.930794794588256*^9, 3.930796901476465*^9, 3.931242836100671*^9, 
  3.93132017402244*^9, 3.931337392109563*^9, 3.9330688606739388`*^9, 
  3.9330690008309298`*^9, 3.9339933362837667`*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"bd52b329-5281-43d7-8e78-4bf22e6525ce"],

Cell[BoxData["\<\"Copyright (C) 2024, Hannes Malcha\"\>"], "Print",
 CellChangeTimes->{3.929093716979047*^9, 3.929337609187085*^9, 
  3.930794794588256*^9, 3.930796901476465*^9, 3.931242836100671*^9, 
  3.93132017402244*^9, 3.931337392109563*^9, 3.9330688606739388`*^9, 
  3.9330690008309298`*^9, 3.933993336284874*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"2c95b608-c5ce-4e56-9b30-833b616f050e"]
}, Open  ]]
}, Open  ]],

Cell["... and we are greeted with a welcome message.", "Text",
 CellChangeTimes->{{3.928491483597251*^9, 3.928491491101008*^9}, {
  3.928502220701982*^9, 3.92850222140827*^9}, {3.9289756878780947`*^9, 
  3.928975693533744*^9}},ExpressionUUID->"9c2cc841-5d22-4535-b83c-\
ab2b6b004dc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting Started with the DDF Package", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.928491178238084*^9, 3.928491181883389*^9}, {3.928491462458601*^9, 
  3.928491465772522*^9}, {3.92849153584872*^9, 3.928491543919471*^9}, {
  3.92897571762227*^9, 3.928975728330683*^9}, {3.928975763205484*^9, 
  3.928975794794622*^9}},ExpressionUUID->"7e0b1f30-0b13-46a3-9828-\
b89ca1a397bd"],

Cell["\<\
To see all the functions and symbols that the DDF package defines write\
\>", "Text",
 CellChangeTimes->{{3.928491547856112*^9, 3.928491565519471*^9}, {
  3.928502018582681*^9, 3.928502019436427*^9}, {3.928975776972348*^9, 
  3.928975786709934*^9}},ExpressionUUID->"45ff3782-28c9-4529-8849-\
6577c89acbf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ddf`*"}]], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[4]:=",ExpressionUUID->"2d5cc28f-59ff-4844-9c96-6ea976d40fde"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["ddf`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["ddf`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["a", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"a", "ddf`"}, 
                   False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["affineH", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "affineH", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["cosetVirasoroOp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "cosetVirasoroOp", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ddfStatesList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "ddfStatesList", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["exp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "exp", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["linearIndependenQ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "linearIndependenQ", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["prod", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "prod", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["sortProd", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "sortProd", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["toDDF", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "toDDF", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["A", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"A", "ddf`"}, 
                   False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["B", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"B", "ddf`"}, 
                   False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["cosetVirasoroOpTp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "cosetVirasoroOpTp", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ddfTp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "ddfTp", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["f", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"f", "ddf`"}, 
                   False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["multiCom", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "multiCom", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["r", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"r", "ddf`"}, 
                   False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["sp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"sp", "ddf`"},
                    False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["toTp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "toTp", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["affineE", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "affineE", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["cartanMatrix", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "cartanMatrix", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["d", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"d", "ddf`"}, 
                   False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["e", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"e", "ddf`"}, 
                   False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["fileNamesList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "fileNamesList", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["opA", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "opA", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rank", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "rank", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["sugawaraOp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "sugawaraOp", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["tp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"tp", "ddf`"},
                    False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["affineF", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "affineF", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["com", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "com", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ddfProd", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "ddfProd", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["eps", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "eps", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["h", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"h", "ddf`"}, 
                   False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["opB", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "opB", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["s", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {"s", "ddf`"}, 
                   False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["sugawaraOpTp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "sugawaraOpTp", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["virasoroOp", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9170d7e5-7085-4a99-bd53-ac0ca3d0525f", {
                   "virasoroOp", "ddf`"}, False},
                 ButtonNote->"ddf`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.10555555555555554`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.929093717070638*^9, 3.929337609283072*^9, 
  3.930794794667022*^9, 3.930796901568788*^9, 3.931337392245783*^9, 
  3.933068860757757*^9, 3.933069000915122*^9, 3.933993336447781*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4dfb80c2-f74c-48aa-bd22-2231d982f28c"]
}, Open  ]],

Cell["\<\
To get information about a specific function either click on the name of the \
function or write\
\>", "Text",
 CellChangeTimes->{{3.928491580885066*^9, 3.928491593125854*^9}, {
  3.928502025784727*^9, 3.9285020267941637`*^9}, {3.928920441293029*^9, 
  3.92892046199336*^9}},ExpressionUUID->"77986e4d-42c2-4cb4-b907-\
7d464a93c291"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "opA"}]], "Input",
 CellChangeTimes->{{3.928491595192172*^9, 3.928491604904501*^9}, {
  3.928491849267324*^9, 3.928491881327651*^9}, {3.928491928273498*^9, 
  3.928491929690936*^9}, {3.928492464547173*^9, 3.928492467628494*^9}, {
  3.928502048011224*^9, 3.928502048395754*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[5]:=",ExpressionUUID->"3ebb189a-05f3-47a4-90ce-fb2f513115ea"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"opA\\\",\\nFontWeight->\\\"\
Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\
\\(\\*\\nStyleBox[\\\"l\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\",\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"m\
\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"]\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\
\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"state\\\",\\nFontWeight->\\\"Bold\\\"]\
\\)\\!\\(\\*\\nStyleBox[\\\"]\\\",\\nFontWeight->\\\"Bold\\\"]\\) is the \
transversal DDF operator of level l and mode m. It acts on other DDF \
operators (\\!\\(\\*\\nStyleBox[\\\"opA\\\",\\nFontWeight->\\\"Bold\\\"]\\) \
or \\!\\(\\*\\nStyleBox[\\\"opB\\\",\\nFontWeight->\\\"Bold\\\"]\\)) or \
tachionic states \
(\\!\\(\\*\\nStyleBox[\\\"exp\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\"[\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"\
limCombo_roots\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"]\\\
\",\\nFontWeight->\\\"Bold\\\"]\\)). Returns the resulting state as a Fock \
space element (see also \
\\!\\(\\*\\nStyleBox[\\\"tp\\\",\\nFontWeight->\\\"Bold\\\"]\\)).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"opA", "[", 
                    RowBox[{"ddf`Private`l_", ",", "ddf`Private`m_"}], "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"ddf`Private`ddfCom", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"tp", "[", 
                    RowBox[{
                    RowBox[{"prod", "[", 
                    RowBox[{"{", 
                    RowBox[{"s", "[", 
                    RowBox[{"-", "1"}], "]"}], "}"}], "]"}], ",", 
                    RowBox[{"exp", "[", 
                    FractionBox[
                    RowBox[{"ddf`Private`m", " ", "d"}], "ddf`Private`l"], 
                    "]"}]}], "]"}], 
                    SqrtBox["2"]], ",", "#1"}], "]"}], "&"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", "Tooltip"]& ], "\<\"ddf`opA\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"opA\\\",\\nFontWeight->\\\"\
Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\
\\(\\*\\nStyleBox[\\\"l\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\",\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"m\
\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"]\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\
\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"state\\\",\\nFontWeight->\\\"Bold\\\"]\
\\)\\!\\(\\*\\nStyleBox[\\\"]\\\",\\nFontWeight->\\\"Bold\\\"]\\) is the \
transversal DDF operator of level l and mode m. It acts on other DDF \
operators (\\!\\(\\*\\nStyleBox[\\\"opA\\\",\\nFontWeight->\\\"Bold\\\"]\\) \
or \\!\\(\\*\\nStyleBox[\\\"opB\\\",\\nFontWeight->\\\"Bold\\\"]\\)) or \
tachionic states \
(\\!\\(\\*\\nStyleBox[\\\"exp\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\"[\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"\
limCombo_roots\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"]\\\
\",\\nFontWeight->\\\"Bold\\\"]\\)). Returns the resulting state as a Fock \
space element (see also \
\\!\\(\\*\\nStyleBox[\\\"tp\\\",\\nFontWeight->\\\"Bold\\\"]\\)).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*\nStyleBox[\"opA\",\nFontWeight->\"Bold\"]\)\!\(\*\n\
StyleBox[\"[\",\nFontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\"l\",\nFontWeight->\
\"Bold\"]\)\!\(\*\nStyleBox[\",\",\nFontWeight->\"Bold\"]\)\!\(\*\n\
StyleBox[\"m\",\nFontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\"]\",\nFontWeight->\
\"Bold\"]\)\!\(\*\nStyleBox[\"[\",\nFontWeight->\"Bold\"]\)\!\(\*\n\
StyleBox[\"state\",\nFontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\"]\",\n\
FontWeight->\"Bold\"]\) is the transversal DDF operator of level l and mode \
m. It acts on other DDF operators (\!\(\*\nStyleBox[\"opA\",\n\
FontWeight->\"Bold\"]\) or \!\(\*\nStyleBox[\"opB\",\n\
FontWeight->\"Bold\"]\)) or tachionic states (\!\(\*\nStyleBox[\"exp\",\n\
FontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\"[\",\nFontWeight->\"Bold\"]\)\!\(\*\
\nStyleBox[\"limCombo_roots\",\nFontWeight->\"Bold\"]\)\!\(\*\n\
StyleBox[\"]\",\nFontWeight->\"Bold\"]\)). Returns the resulting state as a \
Fock space element (see also \!\(\*\nStyleBox[\"tp\",\n\
FontWeight->\"Bold\"]\)).", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, ddf`opA, {ddf`opA[
         Pattern[ddf`Private`l, 
          Blank[]], 
         Pattern[ddf`Private`m, 
          Blank[]]] :> (ddf`Private`ddfCom[Sqrt[2]^(-1) ddf`tp[
           ddf`prod[{
             ddf`s[-1]}], 
           ddf`exp[(ddf`Private`m/ddf`Private`l) ddf`d]], #]& )}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "ddf`opA"|>, False]]], "Output",
 CellChangeTimes->{3.9290937171632633`*^9, 3.929337609369645*^9, 
  3.930794794751355*^9, 3.930796901660131*^9, 3.931337392370357*^9, 
  3.933068860855031*^9, 3.9330690009973497`*^9, 3.9339933365845547`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d083983d-4f66-45bf-a4af-e1199f5dc9c4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Feingold-Frenkel Algebra", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 3.92850207612263*^9}, {3.928502188775969*^9, 
  3.928502195408326*^9}},ExpressionUUID->"fd418012-cff4-49d5-b926-\
8dc3aecdceab"],

Cell[TextData[{
 "This section introduces the symbol ",
 StyleBox["cartanMatrix",
  FontWeight->"Bold"],
 " and the function ",
 StyleBox["sp.",
  FontWeight->"Bold"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.92899494247552*^9, 
  3.9289949628516006`*^9}},ExpressionUUID->"a1260ace-aad9-486c-9f36-\
db649ae097dc"],

Cell["\<\
The DDF package contains some basic information about the Feingold-Frenkel \
algebra.\
\>", "Text",
 CellChangeTimes->{{3.928502641274114*^9, 3.928502649786882*^9}, {
  3.9285029209619207`*^9, 
  3.928502992053095*^9}},ExpressionUUID->"f77e50de-eb30-4f4c-8a08-\
0b6cc55d920b"],

Cell[TextData[{
 "The Cartan matrix is given by the Symbol ",
 StyleBox["cartanMatrix",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.928503010888867*^9, 3.928503040416089*^9}, {
  3.9285033243040247`*^9, 3.928503337029544*^9}, {3.928975950597104*^9, 
  3.928975953294861*^9}, {3.929070514504772*^9, 
  3.9290705163830347`*^9}},ExpressionUUID->"c78a4adc-26f1-4c1c-a4cb-\
870304a4c9a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cartanMatrix", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.928502994859957*^9, 3.928502999775413*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[6]:=",ExpressionUUID->"59a95f9d-c86d-4694-bc50-5c6515e3ff2c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{"-", "1"}], "2", 
      RowBox[{"-", "2"}]},
     {"0", 
      RowBox[{"-", "2"}], "2"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.929093717173025*^9, 3.929337609376688*^9, 
  3.930794794760056*^9, 3.930796901667783*^9, 3.931337392377462*^9, 
  3.9330688608622713`*^9, 3.9330690010065517`*^9, 3.933993336599249*^9},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"69c92469-3a11-4cda-b43b-\
382eda1eb0b2"]
}, Open  ]],

Cell[TextData[{
 "The simple roots are ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "78737d13-c9fc-4261-8d37-5825016e7397"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "0"], TraditionalForm]],ExpressionUUID->
  "20988faf-5cf8-49b8-a90e-fe01e6b1ad70"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]],ExpressionUUID->
  "eadc779d-3fe9-42cb-b764-0dbec83e8019"],
 ". The affine null root is \[Delta] = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "0"], TraditionalForm]],ExpressionUUID->
  "52174e63-30e9-4b81-997d-f17ad28e5ab2"],
 "+ ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]],ExpressionUUID->
  "0a8643d8-00c5-4349-953f-86c5a844fdff"],
 ". In the DDF package we define the symbols ",
 StyleBox["r ",
  FontWeight->"Bold"],
 "= ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "4fb42faa-0f6a-4512-8fb6-fdc67de2ba06"],
 ", ",
 StyleBox["d",
  FontWeight->"Bold"],
 " = \[Delta] and ",
 StyleBox["s",
  FontWeight->"Bold"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]],ExpressionUUID->
  "829a55fb-de08-4181-9725-48cb330ad587"],
 " for these roots."
}], "Text",
 CellChangeTimes->{{3.928503054685395*^9, 3.928503083925085*^9}, {
  3.928503124507547*^9, 3.928503416668706*^9}, {3.928503465088138*^9, 
  3.928503473051272*^9}, {3.92892057590794*^9, 3.928920592253254*^9}, {
  3.928975988530052*^9, 3.928976033573388*^9}, {3.9290932129558764`*^9, 
  3.929093213090804*^9}},ExpressionUUID->"52c06a40-c64a-4712-b990-\
edf054e1854c"],

Cell[TextData[{
 "The function ",
 StyleBox["sp ",
  FontWeight->"Bold"],
 "computes the scalar product of roots according to the Cartan matrix."
}], "Text",
 CellChangeTimes->{{3.928976035284415*^9, 
  3.928976041163363*^9}},ExpressionUUID->"4a9b11fa-8c7b-4654-9bda-\
61f0d9fee85b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sp", "[", 
  RowBox[{"r", ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.9285034195420427`*^9, 3.928503424684112*^9}, {
  3.928920603901126*^9, 3.928920603976436*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[7]:=",ExpressionUUID->"3b59cefa-cc68-435c-b42d-6adb81d92359"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.929093717193129*^9, 3.929337609395994*^9, 
  3.930794794783334*^9, 3.93079690168565*^9, 3.931337392407466*^9, 
  3.933068860877517*^9, 3.933069001036011*^9, 3.933993336628708*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"c70c49bf-5376-48ec-ae61-783ba27e310a"]
}, Open  ]],

Cell["It also works on linear combinations of roots.", "Text",
 CellChangeTimes->{{3.9285034425937233`*^9, 3.928503452722565*^9}, 
   3.928976042243305*^9},ExpressionUUID->"416b4ac0-8b40-40c0-b540-\
1d3fb60da975"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sp", "[", 
  RowBox[{"r", ",", 
   RowBox[{"r", "+", "s"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928503437998576*^9, 3.928503440362328*^9}, {
  3.928920616152194*^9, 3.928920616250831*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[8]:=",ExpressionUUID->"7e28ead2-efe5-48b6-b8b4-5eabcb5ce4af"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.929093717198954*^9, 3.929337609401861*^9, 
  3.930794794789505*^9, 3.930796901714705*^9, 3.931337392413617*^9, 
  3.933068860908655*^9, 3.933069001041461*^9, 3.9339933366378603`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"09d05271-4c61-407c-a0a9-7814bad5163f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computing DDF States", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 
  3.92850207612263*^9}},ExpressionUUID->"6437f9b3-5589-4790-b648-\
15e3f6e1d68e"],

Cell[TextData[{
 "This section introduces the functions ",
 StyleBox["opA",
  FontWeight->"Bold"],
 ", ",
 StyleBox["opB",
  FontWeight->"Bold"],
 ", ",
 StyleBox["exp",
  FontWeight->"Bold"],
 ", ",
 StyleBox["prod",
  FontWeight->"Bold"],
 ", ",
 StyleBox["tp",
  FontWeight->"Bold"],
 ", ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 " and ",
 StyleBox["toTp.",
  FontWeight->"Bold"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.928994966001283*^9, 
  3.928995024879836*^9}},ExpressionUUID->"05207a5b-ea9d-45f0-928c-\
1e55d20729da"],

Cell[TextData[{
 "The first main feature of the DDF package is the calculation of DDF states.\
\nA DDF state is computed from the action of transversal and longitudinal DDF \
operators ",
 StyleBox["opA[l, m]",
  FontWeight->"Bold"],
 " and ",
 StyleBox["opB[l, m]",
  FontWeight->"Bold"],
 " on a tachyonic state ",
 StyleBox["exp[...]",
  FontWeight->"Bold"],
 ".\nThe DDF operators ",
 StyleBox["opA[l, m]",
  FontWeight->"Bold"],
 " and ",
 StyleBox["opB[l, m]",
  FontWeight->"Bold"],
 " take a level l and a mode number m as an argument. \n\nThe transversal DDF \
operator ",
 StyleBox["opA[l, m] ",
  FontWeight->"Bold"],
 "is defined in (3.2) of [1] as the Vertex operator\n\n\tA[l, m] = Res ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       SqrtBox["2"], ")"}], 
      RowBox[{"-", "1"}]], " ", 
     RowBox[{"s", "[", 
      RowBox[{"-", "1"}], "]"}], " ", 
     RowBox[{"exp", "[", 
      RowBox[{
       FractionBox["m", "l"], "d"}], "]"}]}], " ", "]"}], TraditionalForm]],
  ExpressionUUID->"08686867-c678-470f-ad43-059258d5c204"],
 ".\n\t\nThe definition of the longitudinal DDF operators ",
 StyleBox["opB[l, m] ",
  FontWeight->"Bold"],
 "in the DDF package differs from the one given in [1].\nTo make the \
identification of null physical states easier the definition (3.44) is \
reduced to only the longitudinal Virasoro operator (3.20), such that\n\n\t\
B[l, m] = Res ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", " ", 
    RowBox[{
     RowBox[{"-", " ", 
      RowBox[{"\[ScriptCapitalV]", "(", 
       RowBox[{
        RowBox[{
         RowBox[{"t", "[", 
          RowBox[{"-", "1"}], "]"}], " ", 
         RowBox[{"exp", "[", 
          RowBox[{
           FractionBox["m", "l"], "d"}], "]"}]}], ",", "z"}], ")"}]}], " ", 
     "+", 
     RowBox[{
      FractionBox["m", 
       RowBox[{"2", "l"}]], 
      RowBox[{"(", 
       RowBox[{"t", "*", "d"}], ")"}], " ", 
      FractionBox["d", "dz"], 
      RowBox[{"log", "(", 
       FractionBox[
        RowBox[{"d", "[", "z", "]"}], 
        RowBox[{"t", "*", "d"}]], ")"}], "  ", 
      RowBox[{"\[ScriptCapitalV]", "(", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{
          FractionBox["m", "l"], "d"}], ",", "z"}]}], ")"}]}]}], "]"}], 
   TraditionalForm]],ExpressionUUID->"184ab350-2162-49da-80ab-908cfb528a96"],
 ",\n\t\nwhere t is the associated tachyonic momentum of the state on which \
B[l, m] acts. \n\nThe tachyonic state ",
 StyleBox["exp[...]",
  FontWeight->"Bold"],
 " is an element of the twisted group algebra ",
 Cell[BoxData[
  TemplateBox[{},
   "Reals"]],ExpressionUUID->"01e53dc9-33c2-4592-9d92-ebb0d627fbe8"],
 "{\[CapitalLambda]} and as such it takes a linear combination of simple \
roots as an argument. \nFor the DDF state to be physical its associated \
tachyonic momentum, i.e. the argument of ",
 StyleBox["exp[...]",
  FontWeight->"Bold"],
 ",",
 " must be of the form\n\n\ta[l, n] = - l * r - (l + ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     SuperscriptBox["n", "2"], "-", " ", "1"}], "l"], TraditionalForm]],
  ExpressionUUID->"88fdecc9-a90d-4ddc-b33d-df4217dced8c"],
 ") d + n * s\t\twith n \[Element] ",
 Cell[BoxData[
  TemplateBox[{},
   "Integers"]],ExpressionUUID->"02786fd3-cea6-4175-9cdc-3f12b3f37005"],
 " and l the level.\n\nThe DDF states constitute a complete basis of physical \
states (including null physical states) for any allowed momentum on the root \
lattice.\nThe DDF vertex operators are Endomorphisms on the space of physical \
sates ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalP]", 
    RowBox[{"(", "1", ")"}]], TraditionalForm]],ExpressionUUID->
  "1917ddd7-a863-44de-9262-306af8bcb0f3"],
 ", which is the tensor product space of the vector space of finite products \
of creation operators ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"S", 
    RowBox[{"(", 
     SuperscriptBox[
      OverscriptBox["h", "^"], "i"], ")"}]}], "InformationUsageText",
   StripOnInput->False,
   LineSpacing->{1.5, 1.5, 3.}]],ExpressionUUID->
  "1ff4f988-594f-4fa8-a582-40636a52f0c6"],
 " and the twisted group algebra ",
 Cell[BoxData[
  TemplateBox[{},
   "Reals"]],ExpressionUUID->"3306f558-4240-41b1-b1a6-42af05954f2f"],
 "{\[CapitalLambda]}.\nIn the DDF package elements from the tensor product \
space are denoted by ",
 StyleBox["tp[prod[list_roots], exp[...]]",
  FontWeight->"Bold"],
 ".",
 StyleBox[" \n\n",
  FontWeight->"Bold"],
 "Here ",
 StyleBox["prod",
  FontWeight->"Bold"],
 " defines the formal product of creation operators ",
 StyleBox["u[m]",
  FontWeight->"Bold"],
 ", where ",
 StyleBox["u",
  FontWeight->"Bold"],
 " \[Element] {",
 StyleBox["r, d, s",
  FontWeight->"Bold"],
 "} is a root and ",
 StyleBox["m ",
  FontWeight->"Bold"],
 "\[Element] ",
 Cell[BoxData[
  TemplateBox[{},
   "Integers"]],ExpressionUUID->"234079f0-92f8-4b65-91b0-7ac89b1e64a5"],
 " (see also (2.72) in [1] for a precise definition). \n",
 StyleBox["prod",
  FontWeight->"Bold"],
 " has some general properties of a product such as linearity, but is a \
priory non-commutative.\n",
 StyleBox["exp[...]",
  FontWeight->"Bold"],
 " is the formal exponential function. It does not evaluate to anything and \
is used mostly for bookkeeping and easier readability of the ",
 StyleBox["tp",
  FontWeight->"Bold"],
 " results.\nA tensor product with an empty list as the first argument will \
automatically simplify to ",
 StyleBox["exp[...].",
  FontWeight->"Bold"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.928503551423252*^9, 3.9285037309547586`*^9}, 
   3.928503767373612*^9, {3.928976091172537*^9, 3.928976093735328*^9}, {
   3.92897614191578*^9, 3.92897622183159*^9}, {3.928976602899665*^9, 
   3.928976812595629*^9}, {3.928976857727623*^9, 3.928976895195473*^9}, 
   3.928977017534336*^9, {3.92897750728229*^9, 3.92897751302374*^9}, {
   3.928977671892022*^9, 3.928977741071733*^9}, {3.92897867483259*^9, 
   3.928978876709258*^9}, {3.9289789148540783`*^9, 3.928978967652009*^9}, {
   3.928978997777079*^9, 3.928979015577922*^9}, {3.9289950368497*^9, 
   3.928995048086985*^9}, {3.928995112422179*^9, 3.928995114333809*^9}, {
   3.928995242162121*^9, 3.928995268506412*^9}, {3.9289953200270433`*^9, 
   3.928995390839974*^9}, {3.928995426144226*^9, 3.928995620160904*^9}, {
   3.929070556770752*^9, 3.929070830102567*^9}, {3.929070970825984*^9, 
   3.929070979369316*^9}, {3.929071245429517*^9, 3.929071358783291*^9}, {
   3.9290713891909647`*^9, 3.9290714079668913`*^9}, {3.929071467884506*^9, 
   3.929071503765567*^9}, {3.929071575260441*^9, 3.929071576946292*^9}, {
   3.929074600894504*^9, 3.92907460622677*^9}, {3.9290746367477694`*^9, 
   3.929074641594692*^9}, {3.9290747764123793`*^9, 3.9290747837067957`*^9}, {
   3.929074821280395*^9, 3.929074823081951*^9}, {3.9290932195128393`*^9, 
   3.929093309545363*^9}},ExpressionUUID->"6cc3f478-2873-49bf-a699-\
1ab33203e3fc"],

Cell["A (transversal) DDF state is then computed as follows", "Text",
 CellChangeTimes->{{3.928503848883754*^9, 3.928503874718522*^9}, {
  3.928977650217834*^9, 
  3.92897765114744*^9}},ExpressionUUID->"13ec8f1b-2945-4de5-8b59-\
6b90b2e6e5fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"opA", "[", 
   RowBox[{"2", ",", 
    RowBox[{"-", "1"}]}], "]"}], "[", 
  RowBox[{"exp", "[", 
   RowBox[{"a", "[", 
    RowBox[{"2", ",", "0"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.928503876550076*^9, 3.928503911622733*^9}, {
  3.928503976410697*^9, 3.928503977754735*^9}, {3.928920980477702*^9, 
  3.928920982671627*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[9]:=",ExpressionUUID->"2f9080b3-fd60-41b3-adc5-8a4bcf9e0a49"],

Cell[BoxData[
 FractionBox[
  RowBox[{"tp", "[", 
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"{", 
      RowBox[{"s", "[", 
       RowBox[{"-", "1"}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "d"}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{3.929093719861475*^9, 3.929337612644153*^9, 
  3.930794797502952*^9, 3.930796904648406*^9, 3.931337395124021*^9, 
  3.933068863675168*^9, 3.933069003303225*^9, 3.9339933387293243`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ea3f069e-61c0-4164-a834-b1f771de5aef"]
}, Open  ]],

Cell[TextData[{
 "This DDF state has level 2, depth 2, weight 0 and mode sum -1.\nIn the \
tensor product we can read off these values from the coefficients of r, d and \
s, as well as the sum of the arguments of creation operators in the first \
argument of the ",
 StyleBox["tp",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.929075464483322*^9, 3.929075633291522*^9}, 
   3.9294329071453753`*^9},ExpressionUUID->"980f2c03-104a-4189-8e22-\
3478029ea18b"],

Cell["\<\
DDF states with more than one DDF operator are written as nested functions\
\>", "Text",
 CellChangeTimes->{{3.92850393803836*^9, 3.928503957002362*^9}, {
  3.9289790339823217`*^9, 
  3.928979055821293*^9}},ExpressionUUID->"50040efc-22f2-4eb8-b9fd-\
767ee2b4fd2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"opA", "[", 
   RowBox[{"2", ",", 
    RowBox[{"-", "2"}]}], "]"}], "[", 
  RowBox[{
   RowBox[{"opA", "[", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], "]"}], "[", 
   RowBox[{"exp", "[", 
    RowBox[{"a", "[", 
     RowBox[{"2", ",", "0"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.928503963704011*^9, 3.928503972859852*^9}, {
  3.928920975123708*^9, 3.928920990485736*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[10]:=",ExpressionUUID->"e6da2484-8d11-466e-8e96-e44922523b56"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", "3"]}], " ", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{"d", "[", 
          RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "d"}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
    RowBox[{"tp", "[", 
     RowBox[{
      RowBox[{"prod", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"d", "[", 
          RowBox[{"-", "2"}], "]"}], ",", 
         RowBox[{"d", "[", 
          RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "+", 
    RowBox[{"tp", "[", 
     RowBox[{
      RowBox[{"prod", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"-", "2"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "-", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}], ",", 
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}], ",", 
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "d"}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
    RowBox[{"tp", "[", 
     RowBox[{
      RowBox[{"prod", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"d", "[", 
          RowBox[{"-", "1"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"-", "1"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.929093721280173*^9, 3.929337613989242*^9, 
  3.93079479894055*^9, 3.930796906095683*^9, 3.931337396418241*^9, 
  3.933068865189435*^9, 3.933069004715349*^9, 3.9339933404307747`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"53fea1b2-9e51-444c-80d0-33c0797da952"]
}, Open  ]],

Cell["\<\
In general the calculation of such states is very time consuming. In \
particular states involving longitudinal DDF operators take a long time to \
compute as this simple example illustrates\
\>", "Text",
 CellChangeTimes->{{3.92850400522274*^9, 3.928504090676928*^9}, {
  3.928504249612671*^9, 3.928504252168499*^9}, {3.929071776419084*^9, 
  3.929071779986566*^9}, {3.929071811428056*^9, 
  3.929071820890964*^9}},ExpressionUUID->"c83e116f-be65-4ebd-b783-\
99b3f1115449"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"opA", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}], "[", 
      RowBox[{
       RowBox[{"opA", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"exp", "[", 
        RowBox[{"a", "[", 
         RowBox[{"2", ",", "0"}], "]"}], "]"}], "]"}], "]"}], ";"}], "]"}], 
   ",", 
   RowBox[{"Timing", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"opB", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}], "[", 
      RowBox[{
       RowBox[{"opB", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"exp", "[", 
        RowBox[{"a", "[", 
         RowBox[{"2", ",", "0"}], "]"}], "]"}], "]"}], "]"}], ";"}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.928504094273987*^9, 3.928504201150385*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[11]:=",ExpressionUUID->"a4fa0d28-c117-4d37-b0e4-8254285fac91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.374384`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.988431`", ",", "Null"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.929093730729588*^9, 3.929337623388837*^9, 
  3.930794808862594*^9, 3.930796917451211*^9, 3.9313374063561897`*^9, 
  3.933068875414235*^9, 3.933069014196802*^9, 3.933993355496366*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"9e2aeec4-9782-4099-8e5e-37b0a04f3e96"]
}, Open  ]],

Cell[TextData[{
 "To reduce these computation times the DDF package contains roughly 3.000 \
pre-computed DDF states.\nThese states are stored in the folder ",
 StyleBox["ddf_states ",
  FontWeight->"Bold"],
 "and called automatically by the DDF package.\nTo make use of the pre \
computed states we introduce a new function called ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 ", which is an unevaluated version of the DDF states defined above.\nFor \
example we have"
}], "Text",
 CellChangeTimes->{{3.928504086535468*^9, 3.928504086538449*^9}, {
  3.92850424247067*^9, 3.928504272571219*^9}, {3.928979069456744*^9, 
  3.928979285813654*^9}, {3.929071824219554*^9, 3.929071964988027*^9}, {
  3.929072003610265*^9, 3.929072108310184*^9}, {3.92909332710775*^9, 
  3.9290933351745243`*^9}},ExpressionUUID->"6b24cc53-4250-4179-adf8-\
98631ac9745a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddfProd", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"exp", "[", 
    RowBox[{"a", "[", 
     RowBox[{"2", ",", "0"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928979289703379*^9, 3.928979312301414*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[12]:=",ExpressionUUID->"7826e56b-2251-4098-b3ef-7e371831654d"],

Cell[BoxData[
 RowBox[{"ddfProd", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", 
     RowBox[{"B", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"exp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "d"}], "2"]}], "-", 
     RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.929093730831002*^9, 3.929337623447079*^9, 
  3.930794808907208*^9, 3.9307969174931307`*^9, 3.931337406412855*^9, 
  3.933068875463128*^9, 3.9330690142747703`*^9, 3.933993355549584*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"0d0d6eff-dcdd-4f46-9a25-bb83a79f3a71"]
}, Open  ]],

Cell[TextData[{
 "Notice that we wrote ",
 StyleBox["B[l, m]",
  FontWeight->"Bold"],
 " instead op ",
 StyleBox["opB[l, m]",
  FontWeight->"Bold"],
 " here. \nA priori ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 " returns an unevaluated expression.\nHowever, if ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 " contains DDF operators in any order other than the normal one it will \
apply the appropriate commutation relations of DDF operators and return a \
normal ordered ",
 StyleBox["ddfProd",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.929072111135391*^9, 3.929072157869059*^9}, {
  3.929074185265422*^9, 
  3.929074242124202*^9}},ExpressionUUID->"a18184d2-5b81-4b8e-b141-\
2b3a4c0ccf8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ddfProd", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"A", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}], ",", 
      RowBox[{"B", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}], ",", 
      RowBox[{"B", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "4"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{"a", "[", 
      RowBox[{"2", ",", "0"}], "]"}], "]"}]}], "]"}], "//", 
  "Expand"}]], "Input",
 CellChangeTimes->{{3.928979289703379*^9, 3.928979312301414*^9}, {
  3.92907424902151*^9, 3.929074317654415*^9}, {3.929093341332013*^9, 
  3.929093342281492*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[13]:=",ExpressionUUID->"e0be158f-8e96-42c3-8cfd-20e8a549d024"],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", 
   RowBox[{"ddfProd", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "3"}]}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", "d"}], "2"]}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"ddfProd", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", "d"}], "2"]}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.929093730836589*^9, 3.929337623470223*^9, 
  3.930794808914136*^9, 3.930796917521177*^9, 3.9313374064445677`*^9, 
  3.933068875488573*^9, 3.9330690143115597`*^9, 3.933993355584898*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"d6f4af98-f7cf-4d1d-be93-e6dda0f37283"]
}, Open  ]],

Cell[TextData[{
 " The function ",
 StyleBox["toTp",
  FontWeight->"Bold"],
 " converts a ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 " into a ",
 StyleBox["tp",
  FontWeight->"Bold"],
 " expression"
}], "Text",
 CellChangeTimes->{{3.928979316342452*^9, 3.928979359295383*^9}, {
  3.929072155840229*^9, 3.929072174335991*^9}, {3.9290933534511843`*^9, 
  3.92909337476196*^9}},ExpressionUUID->"b417f870-3934-4628-ad41-\
e55a5b4f4ac0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"toTp", "[", 
   RowBox[{"ddfProd", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "0"}], "]"}], "]"}]}], "]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.928504284403695*^9, 3.928504304376144*^9}, {
  3.928979385804599*^9, 3.928979397324746*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[14]:=",ExpressionUUID->"b29425cb-2576-4035-b20b-7ca6b935c97b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.063935`", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], " ", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{"d", "[", 
          RowBox[{"-", "2"}], "]"}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"5", " ", "d"}], "2"]}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{"r", "[", 
          RowBox[{"-", "2"}], "]"}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"5", " ", "d"}], "2"]}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["15", "4"], " ", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}], ",", 
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"5", " ", "d"}], "2"]}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
    RowBox[{"8", " ", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}], ",", 
          RowBox[{"r", "[", 
           RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"5", " ", "d"}], "2"]}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"-", "1"}], "]"}], ",", 
          RowBox[{"r", "[", 
           RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"5", " ", "d"}], "2"]}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.929093730952273*^9, 3.929337623526931*^9, 
  3.930794809027923*^9, 3.930796917652731*^9, 3.931337406564289*^9, 
  3.933068875599859*^9, 3.933069014433963*^9, 3.933993355654561*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6243a17c-1a75-44f9-b2f5-38a32ccb52ca"]
}, Open  ]],

Cell[TextData[{
 "This calculation is much faster than the one above because the DDF package \
is simply reading the result from a file. \n",
 StyleBox["toTp ",
  FontWeight->"Bold"],
 "works on any linear combination of ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 ", however it is advisable to expand the expression beforehand."
}], "Text",
 CellChangeTimes->{{3.928979400097591*^9, 3.928979467104714*^9}, {
   3.929072178475624*^9, 3.929072229291314*^9}, 
   3.92909338352635*^9},ExpressionUUID->"1207e326-7530-49d3-9d55-\
87c3cfc39c39"],

Cell["The two expressions for the same DDF state coincide", "Text",
 CellChangeTimes->{{3.929072226166334*^9, 3.9290722367458143`*^9}, {
  3.929093394708149*^9, 
  3.92909339911856*^9}},ExpressionUUID->"56372d8c-5e5a-46e6-ae25-\
4a4ecd2c6475"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opB", "[", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "]"}], "[", 
    RowBox[{
     RowBox[{"opB", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "]"}], "[", 
     RowBox[{"exp", "[", 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "0"}], "]"}], "]"}], "]"}], "]"}], "-", 
   RowBox[{"toTp", "[", 
    RowBox[{"ddfProd", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"B", "[", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "]"}], ",", 
        RowBox[{"B", "[", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{"a", "[", 
        RowBox[{"2", ",", "0"}], "]"}], "]"}]}], "]"}], "]"}]}], "//", 
  "Expand"}]], "Input",
 CellChangeTimes->{{3.928979469009087*^9, 3.928979486349443*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[15]:=",ExpressionUUID->"74a3b0ed-6d60-4bfe-9ebb-2b48c78fdbea"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.929093734148749*^9, 3.9293376266782293`*^9, 
  3.930794812123671*^9, 3.93079692100401*^9, 3.931337409597999*^9, 
  3.933068878863578*^9, 3.9330690174915047`*^9, 3.933993360581237*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"b45dfd7e-9673-423b-b790-0ea1b57c521a"]
}, Open  ]],

Cell[TextData[{
 "If a DDF state needed for the ",
 StyleBox["toTp",
  FontWeight->"Bold"],
 " function is not",
 " stored in the ",
 StyleBox["ddf_states",
  FontWeight->"Bold"],
 " folder the ",
 StyleBox["toTp",
  FontWeight->"Bold"],
 " will issue a warning message and proceed with a manual evaluation of the \
DDF product"
}], "Text",
 CellChangeTimes->{{3.928979498577791*^9, 3.92897955294835*^9}, {
  3.928979617191613*^9, 3.928979619470997*^9}, {3.929072265920601*^9, 
  3.929072284065846*^9}},ExpressionUUID->"97c80df4-ea67-4588-a9a5-\
e81460d7df81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toTp", "[", 
  RowBox[{"ddfProd", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A", "[", 
      RowBox[{"7", ",", 
       RowBox[{"-", "3"}]}], "]"}], "}"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{"a", "[", 
      RowBox[{"7", ",", "0"}], "]"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.928979555227618*^9, 3.9289795967495813`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[16]:=",ExpressionUUID->"9c94e34d-17b5-4e0c-920a-86c6a92ce681"],

Cell[BoxData[
 TemplateBox[{
  "toTp", "nnarg", 
   "\"Warning the DDF state has not been pre-computed. Switching to manual \
evaluation. This might take a while.\"", 2, 16, 1, 30169760050681213715, 
   "Local", "ddf`toTp"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.929093734255822*^9, 3.929337626713786*^9, 
  3.930794812164899*^9, 3.9307969210708427`*^9, 3.9313374096567087`*^9, 
  3.9330688789107637`*^9, 3.933069017556044*^9, 3.933993360632407*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"581120ad-b534-462f-b197-3efed83f9ffc"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{"s", "[", 
        RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"51", " ", "d"}], "7"]}], "-", 
       RowBox[{"7", " ", "r"}]}], "]"}]}], "]"}], "-", 
   RowBox[{
    FractionBox["3", "14"], " ", 
    RowBox[{"tp", "[", 
     RowBox[{
      RowBox[{"prod", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"d", "[", 
          RowBox[{"-", "2"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"51", " ", "d"}], "7"]}], "-", 
        RowBox[{"7", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
   RowBox[{
    FractionBox["3", "7"], " ", 
    RowBox[{"tp", "[", 
     RowBox[{
      RowBox[{"prod", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"d", "[", 
          RowBox[{"-", "1"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"-", "2"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"51", " ", "d"}], "7"]}], "-", 
        RowBox[{"7", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
   RowBox[{
    FractionBox["9", "98"], " ", 
    RowBox[{"tp", "[", 
     RowBox[{
      RowBox[{"prod", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"d", "[", 
          RowBox[{"-", "1"}], "]"}], ",", 
         RowBox[{"d", "[", 
          RowBox[{"-", "1"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"51", " ", "d"}], "7"]}], "-", 
        RowBox[{"7", " ", "r"}]}], "]"}]}], "]"}]}]}], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{3.929093734744075*^9, 3.929337627169035*^9, 
  3.930794812669716*^9, 3.930796921594831*^9, 3.931337410113148*^9, 
  3.933068879418056*^9, 3.933069018016677*^9, 3.9339933613400497`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"8c3db5f5-7379-4fe3-8b20-cbdbb6177da3"]
}, Open  ]],

Cell[TextData[{
 "New DDF states can be automatically added to the ",
 StyleBox["ddf_states",
  FontWeight->"Bold"],
 " folder with the Wolfram Language Script ",
 StyleBox["compute_ddf_states.wls",
  FontWeight->"Bold"],
 ". See the ",
 StyleBox["README",
  FontWeight->"Bold"],
 " for an instruction how to use the .wls file."
}], "Text",
 CellChangeTimes->{{3.928979603067874*^9, 3.928979621572709*^9}, {
  3.92897966313645*^9, 
  3.928979741616836*^9}},ExpressionUUID->"251e3833-8b32-4660-b6a1-\
6438adb7ad13"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checking the Physical State Condition", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 3.928502083401278*^9}, {3.929069562985408*^9, 
  3.929069571457376*^9}},ExpressionUUID->"d432dd66-1cc1-4dd9-a26a-\
11a6003f0d65"],

Cell[TextData[{
 "This  section introduces the function ",
 StyleBox["virasoroOp",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.928995628720207*^9, 3.928995665675688*^9}, {
   3.929072368379752*^9, 3.9290723717585793`*^9}, 
   3.9290934084214773`*^9},ExpressionUUID->"2698e9df-92f0-4073-96db-\
ad5615243ebe"],

Cell[TextData[{
 "All DDF states \[Psi] automatically satisfy the physical state (or \
Virasoro) condition\n\n\t(",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", 
     RowBox[{"(", "n", ")"}]], "-", 
    SubscriptBox["\[Delta]", "n0"]}], TraditionalForm]],ExpressionUUID->
  "6166edb2-0898-49d5-b0ee-6d2438af6351"],
 ")\[Psi] = 0\t\tfor all n \[GreaterEqual] 0.\n\t\nThe Virasoro operator ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", 
     RowBox[{"(", "n", ")"}]], " "}], TraditionalForm]],ExpressionUUID->
  "e2d469a5-e094-457a-9b55-a4d718724e1b"],
 "is defined in (2.112) and (2.116) of [1].\nIn the DDF package it is called ",
 StyleBox["virasoroOp[m]",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.929072469048515*^9, 3.929072646321888*^9}, {
  3.929093417170952*^9, 
  3.929093420425777*^9}},ExpressionUUID->"a58f2828-71cd-47e5-a3b5-\
16cc5198e5fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"virasoroOp", "[", "1", "]"}], "[", 
  RowBox[{
   RowBox[{"opA", "[", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], "]"}], "[", 
   RowBox[{"exp", "[", 
    RowBox[{"a", "[", 
     RowBox[{"2", ",", "0"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.929072689736156*^9, 3.929072727479042*^9}, {
  3.929072785654889*^9, 3.929072787451611*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[17]:=",ExpressionUUID->"ac40804b-de97-4d7b-bb00-85715051ce40"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9290937351839848`*^9, 3.929337627612276*^9, 
  3.9307948130990343`*^9, 3.930796922052444*^9, 3.931337410554688*^9, 
  3.933068879883919*^9, 3.933069018437695*^9, 3.933993362026306*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"0af504a7-970e-4347-888b-ed13707d2f6f"]
}, Open  ]],

Cell[TextData[{
 "The DDF package also contains the Virasoro operator with mode number -1 as \
defined in (2.108) - (2.109). \nThese negative mode Virasoro operators \
generate the null physical states, i.e. physical states that are orthogonal \
too all physical states including themselves.\nWith our definition the null \
physical states are exactly those that contain at least one ",
 StyleBox["opB[_, -1]",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.929072799578479*^9, 3.929072818815195*^9}, {
   3.929072879756427*^9, 3.929072899859367*^9}, {3.929073137010336*^9, 
   3.929073137054234*^9}, {3.929073295057778*^9, 3.929073297913789*^9}, 
   3.929073381842619*^9, 3.9290736915081377`*^9, {3.929073743257674*^9, 
   3.9290738414506702`*^9}, {3.9290934360180483`*^9, 
   3.9290934602367373`*^9}},ExpressionUUID->"00f90a08-78ee-4024-8a5c-\
7394f6e5caa1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"virasoroOp", "[", 
     RowBox[{"-", "1"}], "]"}], "[", 
    RowBox[{
     RowBox[{"opA", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "]"}], "[", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"2", ",", "0"}], "]"}], "-", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "d"}]}], "]"}], "]"}], "]"}], "+", 
   RowBox[{
    RowBox[{"opA", "[", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "]"}], "[", 
    RowBox[{
     RowBox[{"opB", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "]"}], "[", 
     RowBox[{"exp", "[", 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "0"}], "]"}], "]"}], "]"}], "]"}]}], "//", 
  "Expand"}]], "Input",
 CellChangeTimes->{{3.929073850672608*^9, 3.929073886761294*^9}, {
   3.929073920827881*^9, 3.92907399721556*^9}, 3.931320180936315*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[18]:=",ExpressionUUID->"5483aeff-ff93-4cf4-8285-8dfe259534f1"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.929093737661006*^9, 3.929337629948183*^9, 
  3.930794815471615*^9, 3.930796924678199*^9, 3.931320182041497*^9, 
  3.931337412999956*^9, 3.9330688824023857`*^9, 3.933069020705328*^9, 
  3.933993365748801*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3bef28f0-1e90-4c9b-9888-506647492ede"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computing DDF Commutators", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 
  3.928502083401278*^9}},ExpressionUUID->"e1b7b934-a1c5-4e69-b594-\
e4684a722b28"],

Cell[TextData[{
 "This  section introduces the functions ",
 StyleBox["com",
  FontWeight->"Bold"],
 " and ",
 StyleBox["sortProd",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.928995628720207*^9, 3.928995665675688*^9}, {
  3.931337368893787*^9, 
  3.9313373697697487`*^9}},ExpressionUUID->"d45c8efe-bffb-4838-88de-\
723100d3da17"],

Cell[TextData[{
 "In addition to computing DDF states the DDF package can also compute \
commutators of DDF states.\nThe commutator function ",
 StyleBox["com",
  FontWeight->"Bold"],
 " takes two arguments which can be either of the form ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 " or ",
 StyleBox["tp ",
  FontWeight->"Bold"],
 "(or linear combination thereof).\nSimilar to ",
 StyleBox["opA",
  FontWeight->"Bold"],
 " and ",
 StyleBox["opB",
  FontWeight->"Bold"],
 " also ",
 StyleBox["com",
  FontWeight->"Bold"],
 " returns a linear combination of ",
 StyleBox["tp",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.928979750316701*^9, 3.9289798578505*^9}, {
  3.9289799165431833`*^9, 3.928980030692949*^9}, {3.928980090629065*^9, 
  3.9289801363675213`*^9}, {3.9290740691788187`*^9, 3.92907412468749*^9}, {
  3.9290934699608927`*^9, 3.929093470655571*^9}, {3.931337379444353*^9, 
  3.9313373799058847`*^9}},ExpressionUUID->"1411bdb1-6c81-4e92-82f4-\
27ca0c1d54a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CC", "[", "1", "]"}], "=", 
  RowBox[{"com", "[", 
   RowBox[{
    RowBox[{"exp", "[", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "0"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"opA", "[", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}]}], "]"}], "[", 
     RowBox[{
      RowBox[{"opA", "[", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "]"}], "[", 
      RowBox[{"exp", "[", 
       RowBox[{"a", "[", 
        RowBox[{"1", ",", "0"}], "]"}], "]"}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.928504277101576*^9, 3.928504278428751*^9}, {
  3.928504312948194*^9, 3.9285044373378153`*^9}, {3.928921043582812*^9, 
  3.928921115150444*^9}, {3.92898007104616*^9, 3.928980107548395*^9}, {
  3.928995867221467*^9, 3.928995870063797*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[19]:=",ExpressionUUID->"d097ced6-2739-4d66-b0e6-b6384e6635e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"-", "2"}], "]"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"tp", "[", 
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "d"}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{"r", "[", 
           RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"-", "2"}], "]"}], ",", 
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "d"}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "+", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"-", "2"}], "]"}], ",", 
          RowBox[{"r", "[", 
           RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "d"}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "2"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"-", "2"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]}], ")"}]}], "-", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{"d", "[", 
          RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "d"}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "+", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{"r", "[", 
           RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"-", "2"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]}], ")"}]}], "-", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{"r", "[", 
           RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"-", "2"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
     RowBox[{"tp", "[", 
      RowBox[{
       RowBox[{"prod", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}], ",", 
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}], ",", 
          RowBox[{"d", "[", 
           RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "d"}], "-", 
         RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"d", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         RowBox[{"tp", "[", 
          RowBox[{
           RowBox[{"prod", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"-", "1"}], "]"}], ",", 
              RowBox[{"r", "[", 
               RowBox[{"-", "2"}], "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"exp", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", "d"}], "-", 
             RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"tp", "[", 
          RowBox[{
           RowBox[{"prod", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "[", 
               RowBox[{"-", "1"}], "]"}], ",", 
              RowBox[{"r", "[", 
               RowBox[{"-", "1"}], "]"}], ",", 
              RowBox[{"r", "[", 
               RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"exp", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", "d"}], "-", 
             RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"tp", "[", 
       RowBox[{
        RowBox[{"prod", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "d"}], "-", 
          RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]}], ")"}]}], "-", 
  RowBox[{"tp", "[", 
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "d"}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.9290937401582413`*^9, 3.929337632401712*^9, 
  3.930794818480029*^9, 3.93079692735598*^9, 3.931337414665954*^9, 
  3.933068884077089*^9, 3.933069022446887*^9, 3.9339933682930403`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"76726460-f869-4736-ae54-5729f363a91a"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Initially the result of ",
  FontSlant->"Plain"],
 StyleBox["com ",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 StyleBox["is quite messy. However, the DDF package provides a functions to \
simplify the expression.\n\nThe function ",
  FontSlant->"Plain"],
 StyleBox["sortProd",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 StyleBox[" sorts the products of commuting creation operators in the first \
argument of the ",
  FontSlant->"Plain"],
 StyleBox["tp",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 StyleBox[".\n\nThe function ",
  FontSlant->"Plain"],
 StyleBox["sortProd",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 StyleBox[" is not called automatically together with ",
  FontSlant->"Plain"],
 StyleBox["com",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 StyleBox[" because it would slow down the computation of nested commutators. \
Hence we call them manually on our final expression. Note that the functions \
work best if it is applied to a fully expanded expression.",
  FontSlant->"Plain"]
}], "Text",
 CellChangeTimes->{{3.928980156112962*^9, 3.92898060267167*^9}, {
   3.929074344508868*^9, 3.9290743562318993`*^9}, 3.929093509373339*^9, {
   3.9313374043825827`*^9, 3.931337469207559*^9}},
 FontSlant->"Italic",ExpressionUUID->"4475a907-91af-4ad4-b335-2fd8b7a20c13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CC", "[", "2", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"CC", "[", "1", "]"}], "//", "Expand"}], "//", 
   "sortProd"}]}]], "Input",
 CellChangeTimes->{{3.928504445539955*^9, 3.92850448637352*^9}, {
   3.928504522542066*^9, 3.928504524132502*^9}, {3.928980606450272*^9, 
   3.928980607546077*^9}, 3.928995875438489*^9, 3.929009414400957*^9, 
   3.931337419842684*^9, {3.931337473874805*^9, 3.9313374751808434`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[20]:=",ExpressionUUID->"087cd175-ed2b-4aa5-9b19-3b8f5e80df97"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["2", "3"]}], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{"d", "[", 
        RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{"r", "[", 
        RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "2"}], "]"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "2"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "2"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"-", "2"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"-", "2"}], "]"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"3", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"tp", "[", 
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "d"}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"tp", "[", 
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "d"}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.929093740191494*^9, 3.929337632447132*^9, 
  3.930794818511553*^9, 3.93079692739324*^9, 3.931337475349575*^9, 
  3.933068884113117*^9, 3.933069022492744*^9, 3.933993368359186*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"f0e107e5-b9e1-4378-835f-d045a73711ec"]
}, Open  ]],

Cell["\<\
We see that this result is already much simpler than the one above. However, \
in the next section we show that we can do even better.\
\>", "Text",
 CellChangeTimes->{{3.928980612211219*^9, 3.928980649231043*^9}, {
  3.929074366579625*^9, 
  3.929074385628108*^9}},ExpressionUUID->"368f58d4-71ec-4cac-aa63-\
da8a98ba6706"]
}, Open  ]],

Cell[CellGroupData[{

Cell["From tp to ddfProd", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 3.928502113705202*^9}, {3.9289962854325438`*^9, 
  3.9289962855436707`*^9}},ExpressionUUID->"23e0c77a-67a6-4e95-a278-\
a4f3109bfb74"],

Cell[TextData[{
 "This section introduces the function ",
 StyleBox["toDDF",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.928996310989716*^9, 
  3.928996323439932*^9}},ExpressionUUID->"cf3d0c60-3f8e-49a9-85ba-\
8de0839ccd12"],

Cell[TextData[{
 "DDF states live in the space of physical states  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalP]", 
    RowBox[{"(", "1", ")"}]], TraditionalForm]],ExpressionUUID->
  "87877bcb-c4ff-48a2-8d7c-5da4c9dd9575"],
 " and they form an algebra called the Lie algebra of physical states on the \
quotient space  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[ScriptCapitalP]", 
      RowBox[{"(", "1", ")"}]], "/", 
     SubscriptBox["L", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]]}], 
    SubscriptBox["\[ScriptCapitalP]", 
     RowBox[{"(", "0", ")"}]]}], TraditionalForm]],ExpressionUUID->
  "993d6194-1414-4d4c-ac33-9c93d8874768"],
 ". \nIn our case this Lie algebra is the Feingold-Frenkel algebra.\nThis \
means that commutators of DDF states are again DDF states.\nIf additionally \
the null physical states, i.e. those containing at least one B[l, -1] are \
quotiented out the commutators generate the Lie algebra of physical states.\n\
It can then be shown that any level l element of this Lie algebra can be \
obtained as the commutator of a level (l-1) element with a level 1 element. \n\
\nVice versa this statement implies that level l DDF states form a basis for \
the Lie algebra of physical states of level l.\nSince moreover the depth and \
weight of DDF states are additive under the commutator the number of DDF \
states that form a basis for a given commutator is quite small.\n"
}], "Text",
 CellChangeTimes->{{3.92899568657848*^9, 3.928995697656561*^9}, {
   3.928995766782235*^9, 3.928995851557981*^9}, {3.929074421951953*^9, 
   3.929074427396833*^9}, {3.929074461901436*^9, 3.92907456271015*^9}, {
   3.929074653329705*^9, 3.929074701051745*^9}, {3.9290747992188463`*^9, 
   3.929074806013797*^9}, {3.929074836354341*^9, 3.929074979589262*^9}, {
   3.92907519638582*^9, 3.929075293067745*^9}, {3.929075369512072*^9, 
   3.929075456010623*^9}, {3.929075671941943*^9, 3.929075754403033*^9}, {
   3.9290848450023*^9, 3.929084860537796*^9}, {3.929093523305347*^9, 
   3.92909355553616*^9}, 
   3.929432822851467*^9},ExpressionUUID->"0eb44424-9011-4bf5-af20-\
885927e687b5"],

Cell[TextData[{
 "The DDF package contains a function called ",
 StyleBox["toDDF",
  FontWeight->"Bold"],
 ", which takes commutators like ",
 StyleBox["CC[2]",
  FontWeight->"Bold"],
 " and turns them into a linear combination of ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 ". \nThis is achieved by first identifying the level, weight and mode sum of \
the commutator in question.\nThen a basis of DDF states meeting this \
properties is pulled from the ",
 StyleBox["ddf_states",
  FontWeight->"Bold"],
 " folder and the commutator is expressed in a DDF basis.\nAt the moment the ",
 StyleBox["ddf_states ",
  FontWeight->"Bold"],
 "folder contains about 5.000 DDF states up to and including level 5.\n\nThe  \
function ",
 StyleBox["toDDF",
  FontWeight->"Bold"],
 " takes a linear combination of ",
 StyleBox["tp",
  FontWeight->"Bold"],
 " as an argument. It works best when this linear combination is fully \
expanded."
}], "Text",
 CellChangeTimes->{{3.928995889357055*^9, 3.9289960146279716`*^9}, {
   3.928996053550146*^9, 3.9289960836545153`*^9}, 3.929075311727517*^9, {
   3.929075768677236*^9, 3.929075838700914*^9}, {3.92907587311211*^9, 
   3.929075964619454*^9}, 3.929084799216598*^9, {3.929085266075992*^9, 
   3.929085266705724*^9}, {3.932453952538735*^9, 
   3.932453955564389*^9}},ExpressionUUID->"a1fc543c-774b-4637-a863-\
d9087cbc008c"],

Cell["For  the commutator from above we find", "Text",
 CellChangeTimes->{{3.929084801009117*^9, 
  3.929084810711478*^9}},ExpressionUUID->"3ff1ca20-c58c-4fca-999d-\
3b74b78db5f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddfCC", "=", 
  RowBox[{"toDDF", "[", 
   RowBox[{"CC", "[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.928504532556059*^9, 3.928504538848167*^9}, {
  3.9285046121629896`*^9, 3.9285046167422857`*^9}, {3.928996086117892*^9, 
  3.928996088490656*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[21]:=",ExpressionUUID->"8f6fc885-250e-48ab-ad4b-9e4ae9c70b97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"ddfProd", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", "d"}], "2"]}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"ddfProd", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", "d"}], "2"]}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"ddfProd", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}], ",", 
      RowBox[{"A", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}], ",", 
      RowBox[{"B", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", "d"}], "2"]}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "-", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"ddfProd", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", "d"}], "2"]}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.929093740349852*^9, 3.929337632601856*^9, 
  3.930794818758141*^9, 3.9307969276504087`*^9, 3.931337486840742*^9, 
  3.93306888435314*^9, 3.933069022689413*^9, 3.933993368630094*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"de284008-e2df-4868-a8f8-0a29e15a96bd"]
}, Open  ]],

Cell[TextData[{
 "This expression is not yet an element of the Lie algebra of physical states \
because it contains null physical states. \nDue to our definition of the \
longitudinal DDF operator ",
 StyleBox["opB",
  FontWeight->"Bold"],
 " the null physical states are exactly those ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 " expressions that contain at least one ",
 StyleBox["B[_, -1] ",
  FontWeight->"Bold"],
 "(see also the section above and [1] for a detailed explanation of this). \n\
Hence we remove the terms containing ",
 StyleBox["B[_, -1] ",
  FontWeight->"Bold"],
 "from ",
 StyleBox["ddfCC",
  FontWeight->"Bold"],
 ".\n\nWe also eliminate the cocycle factors since these are merely artefacts \
of the commutators but not part of the physical states.\n\nFinally, we add an \
overall factor of 4 for later convenience."
}], "Text",
 CellChangeTimes->{{3.928996097447254*^9, 3.928996299792232*^9}, {
  3.929084869117919*^9, 3.929084999845758*^9}, {3.929085145657172*^9, 
  3.929085167853544*^9}, {3.929093494359461*^9, 3.9290934981386557`*^9}, {
  3.9290935697553263`*^9, 
  3.929093579014925*^9}},ExpressionUUID->"d9a5220f-0b7e-4b35-b93a-\
3262f07a866f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"state233", "=", 
  RowBox[{"4", "*", 
   RowBox[{"ReplaceAll", "[", 
    RowBox[{"ddfCC", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "[", 
         RowBox[{"_", ",", 
          RowBox[{"-", "1"}]}], "]"}], "->", "0"}], ",", 
       RowBox[{
        RowBox[{"eps", "[", 
         RowBox[{"a_", ",", "b_"}], "]"}], "->", "1"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.928921497484004*^9, 3.928921537782959*^9}, 
   3.929009419394602*^9, {3.929085005730773*^9, 3.929085022842078*^9}, {
   3.929085078834648*^9, 3.929085080100286*^9}, {3.9290851705884047`*^9, 
   3.929085170902967*^9}, {3.929085835675648*^9, 3.929085859940207*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[22]:=",ExpressionUUID->"1a6f9b56-8be5-4d6c-8c04-c5459b4daedc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], " ", 
  RowBox[{"ddfProd", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "2"}]}], "]"}], ",", 
      RowBox[{"A", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", "d"}], "2"]}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.929093740355735*^9, 3.929337632607524*^9, 
  3.930794818763833*^9, 3.930796927656485*^9, 3.931337486875207*^9, 
  3.933068884377215*^9, 3.933069022695402*^9, 3.933993368643223*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"5c747d75-0776-420a-a6c3-b7ca2536978c"]
}, Open  ]],

Cell[TextData[{
 "The numbers in the name of the state are there to indicate that it has \
weight vector (2,3,3), i.e. it is a level 2 state with depth 3 and weight 0. \
These numbers can most easily be read off from the ",
 StyleBox["tp",
  FontWeight->"Bold"],
 " expression ",
 StyleBox["CC[2]",
  FontWeight->"Bold"],
 ", which was given in the section above."
}], "Text",
 CellChangeTimes->{{3.929085868902068*^9, 
  3.929085982683988*^9}},ExpressionUUID->"8da1fc9a-e668-4c1f-9436-\
9382411c4b7f"],

Cell[TextData[{
 "There are two special cases that require some additional attention:\nWhen \
applying the ",
 StyleBox["toDDF",
  FontWeight->"Bold"],
 " function to an expression, which is not an element of the DDF algebra ",
 StyleBox["toDDF",
  FontWeight->"Bold"],
 " will issue a warning message and return the unevaluated expression."
}], "Text",
 CellChangeTimes->{{3.929008868720886*^9, 3.929008979305217*^9}, {
  3.929085736798362*^9, 3.9290857389474154`*^9}, {3.929085965792861*^9, 
  3.929085977029855*^9}, {3.929093586686698*^9, 
  3.929093588193104*^9}},ExpressionUUID->"e4311bd4-9593-4f57-b918-\
29e2589145ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toDDF", "[", 
  RowBox[{
   RowBox[{
    FractionBox["2", "3"], " ", 
    RowBox[{"eps", "[", 
     RowBox[{"d", ",", "r"}], "]"}], " ", 
    RowBox[{"tp", "[", 
     RowBox[{
      RowBox[{"prod", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"-", "1"}], "]"}], ",", 
         RowBox[{"r", "[", 
          RowBox[{"-", "1"}], "]"}], ",", 
         RowBox[{"r", "[", 
          RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
   RowBox[{
    RowBox[{"eps", "[", 
     RowBox[{"d", ",", "r"}], "]"}], " ", 
    RowBox[{"tp", "[", 
     RowBox[{
      RowBox[{"prod", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"-", "1"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"-", "1"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929008888557007*^9, 3.929008892851832*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[23]:=",ExpressionUUID->"72b7eb0f-78d1-4d4d-9804-30d0d96e9544"],

Cell[BoxData[
 TemplateBox[{
  "toDDF", "nddfState", 
   "\"The expression is not an element of the DDF algebra.\"", 2, 23, 2, 
   30169760050681213715, "Local", "ddf`toDDF"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.929093740501244*^9, 3.929337632760131*^9, 
  3.93079481892036*^9, 3.930796927830593*^9, 3.931337487026668*^9, 
  3.9330688845663233`*^9, 3.933069022842423*^9, 3.933993368849263*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"5ebe3b70-87f0-4c2f-8b42-9dc589fdf97a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"tp", "[", 
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "d"}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.92909374050622*^9, 3.92933763276538*^9, 
  3.93079481892492*^9, 3.930796927836643*^9, 3.931337487031176*^9, 
  3.933068884571858*^9, 3.933069022847041*^9, 3.9339933688564863`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"fb215856-4e58-48dd-8584-9c76a05365b5"]
}, Open  ]],

Cell[TextData[{
 "When applying the ",
 StyleBox["toDDF",
  FontWeight->"Bold"],
 " function to a state that is in the DDF algebra but for which there is no \
basis in the folder ",
 StyleBox["ddf_states",
  FontWeight->"Bold"],
 " we also receive a warning message and ",
 StyleBox["toDDF ",
  FontWeight->"Bold"],
 "returns the unevaluated expression.",
 "\nTake for example the DDF state"
}], "Text",
 CellChangeTimes->{{3.9290089841659927`*^9, 3.929009023844081*^9}, {
  3.929009105902192*^9, 3.929009117231504*^9}, {3.929085758196135*^9, 
  3.929085785162799*^9}},ExpressionUUID->"87865b0b-e65b-4e48-b02d-\
dee47f9e650f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"opA", "[", 
   RowBox[{"7", ",", 
    RowBox[{"-", "1"}]}], "]"}], "[", 
  RowBox[{"exp", "[", 
   RowBox[{"a", "[", 
    RowBox[{"7", ",", "0"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.92900902591693*^9, 3.929009062195763*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[24]:=",ExpressionUUID->"bb6853be-db6b-41eb-9d78-7b3336cc4f4a"],

Cell[BoxData[
 FractionBox[
  RowBox[{"tp", "[", 
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"{", 
      RowBox[{"s", "[", 
       RowBox[{"-", "1"}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "7"}], " ", "d"}], "-", 
      RowBox[{"7", " ", "r"}]}], "]"}]}], "]"}], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{3.929093740998104*^9, 3.9293376332457*^9, 
  3.930794819438884*^9, 3.930796928409333*^9, 3.931337487500086*^9, 
  3.933068885081334*^9, 3.933069023307805*^9, 3.9339933695713797`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"b9e31321-dee2-4e01-9337-4b77cb75d95d"]
}, Open  ]],

Cell["\<\
Trying  the reverse operation gives us the unevaluated expression and a \
warning message\
\>", "Text",
 CellChangeTimes->{{3.929009121900322*^9, 
  3.929009142078718*^9}},ExpressionUUID->"76800513-2504-4a05-8655-\
c7d0f8b0384c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toDDF", "[", 
  FractionBox[
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "7"}], " ", "d"}], "-", 
       RowBox[{"7", " ", "r"}]}], "]"}]}], "]"}], 
   SqrtBox["2"]], "]"}]], "Input",
 CellChangeTimes->{{3.9290090667392073`*^9, 3.9290090686170897`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[25]:=",ExpressionUUID->"2c34fd4a-170e-48eb-9639-34d01eef4874"],

Cell[BoxData[
 TemplateBox[{
  "toDDF", "nfile", 
   "\"The DDF states for level \\!\\(\\*RowBox[{\\\"7\\\"}]\\), mode \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and weight \\!\\(\\*RowBox[{\\\"0\\\"}]\\) \
were not found in the folder ddf_states.\"", 2, 25, 3, 30169760050681213715, 
   "Local", "ddf`toDDF"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.92909374100444*^9, 3.9293376332519493`*^9, 
  3.930794819447406*^9, 3.9307969284432077`*^9, 3.931337487507623*^9, 
  3.933068885086927*^9, 3.933069023314357*^9, 3.933993369610764*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"37b67e43-dfb8-4f00-a753-c5cf4d3c5cff"],

Cell[BoxData[
 FractionBox[
  RowBox[{"tp", "[", 
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"{", 
      RowBox[{"s", "[", 
       RowBox[{"-", "1"}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "7"}], " ", "d"}], "-", 
      RowBox[{"7", " ", "r"}]}], "]"}]}], "]"}], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{3.929093741009276*^9, 3.929337633256199*^9, 
  3.930794819453136*^9, 3.930796928448374*^9, 3.931337487512594*^9, 
  3.933068885091495*^9, 3.93306902331875*^9, 3.9339933696204433`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"e509427d-307a-48dd-842f-7233008d7a1c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Acting with the affine generators and the Sugawara Operator", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 3.928502144048772*^9}, {3.9290857987858686`*^9, 
  3.9290858119366617`*^9}},ExpressionUUID->"ecbe0a5b-6651-449c-80c4-\
a4e9eaf96f7f"],

Cell[TextData[{
 "This section introduces the affine generators ",
 StyleBox["affineE",
  FontWeight->"Bold"],
 ", ",
 StyleBox["affineF",
  FontWeight->"Bold"],
 " and ",
 StyleBox["affineH",
  FontWeight->"Bold"],
 " as well as the Sugawara operator ",
 StyleBox["sugawaraOp.",
  FontWeight->"Bold"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.929009875999044*^9, 3.929009920434881*^9}, {
  3.929337191622873*^9, 3.929337207843278*^9}, {3.930794828625722*^9, 
  3.9307948290633163`*^9}},ExpressionUUID->"0fabc277-04c6-4fc6-b957-\
2e1e7a133cf0"],

Cell[TextData[{
 "At any level in the DDF algebra there are infinitely many affine \
subalgebras. \nFor the specific case of the Feingold-Frenkel algebra these \
subalgebras are SL(2) algebras.\nThese SL(2) subalgebras can be generated by \
the application of so called affine generators to DDF states.\nThere are the \
Heisenberg generators ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "m"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2bc0f795-e343-4424-b53f-1d1bef5e0452"],
 " and the raising and lowering operators ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "m"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e9390e7c-ce2b-46e7-9ac7-aef2be714dcf"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "m"], "."}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f26e90a0-2cb1-4001-9fc2-71c334142d23"],
 "\nTheir DDF representations have been derived in [2]. \nFor example the \
Heisenberg operator is defined as\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", "m"], "=", " ", 
    SqrtBox["2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1506c839-e503-452f-94be-9bd664c96b4a"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["", 
     RowBox[{"[", "l", "]"}]], 
    SubscriptBox["A", "lm"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c0502810-a84e-4c53-b628-d42e0232a8ff"],
 "\n\nThe raising and lowering operators are quite lengthy and will not be \
given here.\n\nIn the DDF package these affine generators are called ",
 StyleBox["affineE[l, m]",
  FontWeight->"Bold"],
 ", ",
 StyleBox["affineF[l, m]",
  FontWeight->"Bold"],
 " and ",
 StyleBox["affineH[l, m]",
  FontWeight->"Bold"],
 ".\nThey take a level and a mode number as an argument.\nPositive mode \
numbers decrease the depth of a state and negative mode numbers increase the \
depth of a state.\n",
 StyleBox["affineE[l, m]",
  FontWeight->"Bold"],
 " increases the weight and ",
 StyleBox["affineF[l, m] ",
  FontWeight->"Bold"],
 "decreases it. \nThus we can move around in the root lattice with the affine \
generators.",
 "\n\nRecall that the DDF state we computed above has weight vector (2,3,3).\n\
It is a singlet under the action of the affine generators E_0, F_0 and H_0.\n\
This can be easily checked via"
}], "Text",
 CellChangeTimes->{{3.9290094358158207`*^9, 3.929009608828414*^9}, {
  3.929085987403343*^9, 3.929086077155176*^9}, {3.929086162519936*^9, 
  3.929086202346417*^9}, {3.929086268080063*^9, 3.929086680141749*^9}, {
  3.9290936039347477`*^9, 
  3.929093647893218*^9}},ExpressionUUID->"3987635b-9ca9-4f6d-aa29-\
f8cb4fbc546e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"affineE", "[", 
     RowBox[{"2", ",", "0"}], "]"}], "[", "state233", "]"}], ",", 
   RowBox[{
    RowBox[{"affineF", "[", 
     RowBox[{"2", ",", "0"}], "]"}], "[", "state233", "]"}], ",", 
   RowBox[{
    RowBox[{"affineH", "[", 
     RowBox[{"2", ",", "0"}], "]"}], "[", "state233", "]"}]}], "}"}]], "Input",\

 CellChangeTimes->{{3.928504605718796*^9, 3.92850463160342*^9}, {
  3.928921159719219*^9, 3.928921180678113*^9}, {3.928921520638259*^9, 
  3.928921522653111*^9}, {3.929086683322102*^9, 3.929086695723665*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[26]:=",ExpressionUUID->"44712c7d-bd00-4c3a-8422-b408565aea2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.929093741044054*^9, 3.929337633290337*^9, 
  3.930796928487282*^9, 3.931337498095481*^9, 3.933068885165966*^9, 
  3.933069023353756*^9, 3.9339933696715097`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"f5f289a0-b193-4917-aae8-14dfbdc2c1e1"]
}, Open  ]],

Cell["\<\
Above our state in the root lattice there are three more states with weight \
vectors (2,2,1), (2,2,2) and (2,2,3). We can reach those states with the \
affine generators as follows\
\>", "Text",
 CellChangeTimes->{{3.929009634084909*^9, 3.929009692726123*^9}, {
  3.929086706454349*^9, 
  3.929086710086309*^9}},ExpressionUUID->"a4fbec31-be45-4cba-9d71-\
20b4cdaa7d47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], 
    RowBox[{
     RowBox[{"affineE", "[", 
      RowBox[{"2", ",", "1"}], "]"}], "[", "state233", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], 
    RowBox[{
     RowBox[{"affineH", "[", 
      RowBox[{"2", ",", "1"}], "]"}], "[", "state233", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], 
    RowBox[{
     RowBox[{"affineF", "[", 
      RowBox[{"2", ",", "1"}], "]"}], "[", "state233", "]"}]}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.92892118594144*^9, 3.928921222954173*^9}, {
  3.928921526028281*^9, 3.928921529155878*^9}, {3.929009698782271*^9, 
  3.929009704413397*^9}, {3.929086701033345*^9, 3.92908673040773*^9}, {
  3.929086905537476*^9, 3.929086943896473*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[27]:=",ExpressionUUID->"2a93438f-92bd-433e-a940-547387509349"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"ddfProd", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}], "+", "s"}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{"ddfProd", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"A", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", " ", "d"}], "2"]}], "-", 
        RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"ddfProd", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}], "-", "s"}], "]"}]}], "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.929093741078092*^9, 3.929337633321339*^9, 
  3.930796928530457*^9, 3.931337498151268*^9, 3.933068885205626*^9, 
  3.933069023384624*^9, 3.933993369714964*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"bea44b8d-e503-4493-ac62-5857d8e0a855"]
}, Open  ]],

Cell[TextData[{
 "Besides the affine algebra we also have a Sugawara algebra at every level \
of the Lie algebra of physical states.\nThe corresponding Sugawara operator \
is also given in [2] (originally it was derived in hep-th/9604155).\nBecause \
it is very complicated we will not provide an explicit formula here.\nIn the \
DDF package the Sugawara operator at level l and mode m is called ",
 StyleBox["sugawaraOp[l, m]",
  FontWeight->"Bold"],
 ".",
 "\n\nAs an example we show that our singlet state is an eigenstate of the \
zero mode Sugawara operator with eigenvalue 3/2"
}], "Text",
 CellChangeTimes->{{3.9290097665687857`*^9, 3.9290098622958593`*^9}, {
  3.929087100573687*^9, 3.929087208370781*^9}, {3.929087249817222*^9, 
  3.929087301318411*^9}},ExpressionUUID->"73d83ef1-7eed-49a4-aad2-\
5cf8f28551c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sugawaraOp", "[", 
    RowBox[{"2", ",", "0"}], "]"}], "[", "state233", "]"}], "-", 
  RowBox[{
   RowBox[{"3", "/", "2"}], "state233"}]}]], "Input",
 CellChangeTimes->{{3.92892132389962*^9, 3.92892139211868*^9}, {
  3.928921489123447*^9, 3.928921490078261*^9}, {3.928921545228815*^9, 
  3.928921557410192*^9}, {3.929009865267144*^9, 3.929009867751383*^9}, {
  3.929087305752329*^9, 3.92908731189476*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[28]:=",ExpressionUUID->"082fa0cb-0544-4a2c-bb5b-01f5001ad99f"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.92909374129937*^9, 3.929337633559374*^9, 
  3.930796928772465*^9, 3.93133749835207*^9, 3.9330688854380627`*^9, 
  3.933069023584747*^9, 3.933993370038817*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"f3ad14d6-0e85-4b7c-bb2e-d8f152232ba5"]
}, Open  ]],

Cell[TextData[{
 "Finally, there is a coset Virasoro algebra at any level of the Lie algebra \
of physical states. \nWe denote the generator of this coset Virasoro algebra \
by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["\[ScriptCapitalL]", "n"], "coset"], TraditionalForm]],
  ExpressionUUID->"b3b030c6-fd62-4c71-a9c1-9b0976e1b87b"],
 ".\nThe main property of the coset Virasoro generators is that they allow us \
to move from one affine subalgebra to another.\n\n\nThe state is constructed \
form the commutator"
}], "Text",
 CellChangeTimes->{{3.9290873191921988`*^9, 3.929087838143062*^9}, 
   3.9290879224636393`*^9, {3.929088040059164*^9, 3.929088041633469*^9}, {
   3.929337227539194*^9, 3.929337228385726*^9}, {3.929432864712971*^9, 
   3.9294328673990297`*^9}, 
   3.930795469965703*^9},ExpressionUUID->"34a0bca3-175e-4ccd-8eda-\
fbd39808d75a"],

Cell["", "Text",
 CellChangeTimes->{{3.9290878284932013`*^9, 3.929087828942812*^9}, {
   3.929087935779807*^9, 3.929087960430969*^9}, {3.92908803443552*^9, 
   3.929088048709215*^9}, {3.929093661925624*^9, 3.92909368547269*^9}, {
   3.929337240310224*^9, 3.92933728115822*^9}, {3.929337356013509*^9, 
   3.929337557880582*^9}, 
   3.930795647753746*^9},ExpressionUUID->"bcb97e16-ed6d-44da-b1c5-\
63d6900d03c8"],

Cell["\<\
Notice that there are still some problems with the coset Virasoro operator in \
the Feingold-Frenkel algebra. At level 2 the head of the q-series of the \
coset Virasoro representation is chopped off. Thus the application of the \
coset Virasoro can produce to states outside of the Feingold-Frenkel algebra. \
At level 3 and higher the eigenvalue equation for eigenstates which are not \
pure commutators of ground states does not work.\
\>", "Text",
 CellChangeTimes->{{3.92933765380469*^9, 3.929337711591954*^9}, 
   3.929337743333411*^9},ExpressionUUID->"4ca72df4-0173-4622-bd02-\
e8d92bc46839"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The coset Virasoro Operator", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 3.928502144048772*^9}, {3.929085798785868*^9, 
  3.9290858119366617`*^9}, {3.930794840369286*^9, 
  3.930794849683715*^9}},ExpressionUUID->"6bc04488-25fd-421b-b2df-\
b02609f45f01"],

Cell[TextData[{
 "This  section introduces the DDF tensor product ",
 StyleBox["ddfTp",
  FontWeight->"Bold"],
 " the Sugawara operator ",
 StyleBox["sugawaraOpTp",
  FontWeight->"Bold"],
 " and the",
 " coset Virasoro operators ",
 StyleBox["cosetVirasoroOp",
  FontWeight->"Bold"],
 " and ",
 StyleBox["cosetVirasoroOpTp",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.9290099254399767`*^9, 3.929010000577483*^9}, {
  3.930796428239914*^9, 
  3.930796498887249*^9}},ExpressionUUID->"e37ebbe3-6d7f-4ec5-889c-\
1f1f76be9753"],

Cell[TextData[{
 "Besides the SL(2) algebras there is also a coset Virasoro algebra with \
generators ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["\[ScriptCapitalL]", "n"], "coset"], TraditionalForm]],
  ExpressionUUID->"06401c43-6b03-45d8-9495-26413c4c1976"],
 " which commute with the affine generators. \nThe coset Virasoro generator \
is construed from the Sugawara operator ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalL]", "n"], TraditionalForm]],ExpressionUUID->
  "6829274b-9c64-4778-a87a-59674ac3b03f"],
 " via\n\n\t",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["\[ScriptCapitalL]", "n"], "coset"], TraditionalForm]],
  ExpressionUUID->"1a695cba-f103-401b-812b-9867e0762ff1"],
 " \[Psi] = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["\[ScriptCapitalL]", "n"], "coset"], TraditionalForm]],
  ExpressionUUID->"1eeb5fa4-0584-41c4-8603-ea76456595cb"],
 "[",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "1"], ",", " ", 
      SubscriptBox["\[Phi]", "2"]}], "]"}], " ", "=", " "}], 
   TraditionalForm]],ExpressionUUID->"04190f2b-38b6-4581-8603-a764126bc1d8"],
 "[",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[ScriptCapitalL]", "n"], " ", 
        SubscriptBox["\[Phi]", "1"]}], ",", " ", 
       SubscriptBox["\[Phi]", "2"]}], "]"}], " ", "+", " ", 
     RowBox[{"[", 
      RowBox[{
       SubscriptBox["\[Phi]", "1"], ",", " ", 
       RowBox[{
        SubscriptBox["\[ScriptCapitalL]", "n"], " ", 
        SubscriptBox["\[Phi]", "2"]}]}], "]"}], " ", "-", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "n"], " ", "[", 
      RowBox[{
       SubscriptBox["\[Phi]", "1"], ",", " ", 
       SubscriptBox["\[Phi]", "2"]}], "]"}]}], " ", ","}], TraditionalForm]],
  ExpressionUUID->"fc77f9eb-3561-4d4a-ae90-ca77df658e88"],
 "\n\t\nwhere the level is chosen appropriately for the state on which ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalL]", "n"], TraditionalForm]],ExpressionUUID->
  "f81f0276-8c28-479f-96ca-05d8bdb415fa"],
 " acts.\n\n Recall that the ",
 StyleBox["state233 ",
  FontWeight->"Bold"],
 "defined above is constructed from the commutator "
}], "Text",
 CellChangeTimes->{{3.930794878773802*^9, 3.930794899835575*^9}, {
  3.930795350373464*^9, 3.930795352056982*^9}, {3.930795402436339*^9, 
  3.930795526083544*^9}, {3.93079558150602*^9, 
  3.9307956404775047`*^9}},ExpressionUUID->"cc715176-2d53-46d1-88d8-\
ac2fec5b9b2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"Sqrt", "[", "2", "]"}]]}], 
    RowBox[{"toDDF", "[", 
     RowBox[{
      RowBox[{"com", "[", 
       RowBox[{
        RowBox[{"exp", "[", 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"exp", "[", 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], "//", "Expand"}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"_", ",", 
        RowBox[{"-", "1"}]}], "]"}], "->", "0"}], ",", 
     RowBox[{
      RowBox[{"eps", "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "->", "1"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.92908786692264*^9, 3.929087906935729*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[29]:=",ExpressionUUID->"b3a2eb5f-97a0-4939-a09c-a068dc291ddf"],

Cell[BoxData[
 RowBox[{"ddfProd", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", "[", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
   RowBox[{"exp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "d"}], "2"]}], "-", 
     RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.929093741365102*^9, 3.929337633605847*^9, 
  3.930796928798468*^9, 3.93133751569831*^9, 3.9330688854573936`*^9, 
  3.933069023635613*^9, 3.9339933700738163`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"67e6f890-2326-48fa-82d3-4ca5f789e3f3"]
}, Open  ]],

Cell[TextData[{
 "We apply the zero mode coset Virasoro operator as defined above and find \
the eigenvalue of our state.\nIn the DDF package the coset Virasoro operator \
is called ",
 StyleBox["cosetVirasoroOp[l1, l2, m]",
  FontWeight->"Bold"],
 ".\n\nTo compute the action of the coset Virasoro operator on \[Psi] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["\[Phi]", "1"], ",", 
     SubscriptBox["\[Phi]", "2"]}], "]"}], TraditionalForm]],ExpressionUUID->
  "33d602ea-343d-4c8c-9810-746ada081d67"],
 " we must feed it ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "1"], TraditionalForm]],ExpressionUUID->
  "54ab5ddc-73a2-4852-9195-6d0197b5857e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "2"], "."}], TraditionalForm]],ExpressionUUID->
  "c26a234e-1859-479f-80f3-7db62ab97c3b"],
 "\nThe operator itself takes three arguments. The level of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "1"], ","}], TraditionalForm]],ExpressionUUID->
  "2c8f116f-ac21-4368-8c30-16306adbdf84"],
 " the level of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "2"], TraditionalForm]],ExpressionUUID->
  "0a94a696-e951-428d-8ad3-5299dd494de7"],
 " and a mode number.\nIn practice this then looks as follows."
}], "Text",
 CellChangeTimes->{
  3.9307956499934883`*^9},ExpressionUUID->"0cfcc112-d8f2-4138-b245-\
c89aba30bd71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"cosetVirasoroOp", "[", 
     RowBox[{"1", ",", "1", ",", "0"}], "]"}], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"Sqrt", "[", "2", "]"}]]}], 
      RowBox[{"exp", "[", 
       RowBox[{"a", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"B", "[", 
     RowBox[{"_", ",", 
      RowBox[{"-", "1"}]}], "]"}], "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929087969067669*^9, 3.9290880255492573`*^9}, {
  3.929337307877578*^9, 3.929337344236206*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[30]:=",ExpressionUUID->"e2c43d82-d19e-41ed-9b92-91391c384777"],

Cell[BoxData[
 RowBox[{
  FractionBox["3", "2"], " ", 
  RowBox[{"ddfProd", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", "d"}], "2"]}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.929337333280821*^9, 3.929337344756366*^9}, 
   3.929337633890821*^9, 3.930796929112478*^9, 3.931337516006554*^9, 
   3.933068885744358*^9, 3.933069023911119*^9, 3.933993370494164*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"98f3cb84-fb8b-4af1-af02-91a2b3cbdd49"]
}, Open  ]],

Cell["\<\
However, it  turns  out  that  the  DDF  states  in  F  do  not  form  a  \
representation  of  the  coset  Virasoro  operator.
For example we can check that\
\>", "Text",
 CellChangeTimes->{{3.930795526995479*^9, 3.930795529284329*^9}, {
  3.930795666532207*^9, 
  3.930795690762827*^9}},ExpressionUUID->"ff49e936-54cb-4b13-9cc7-\
a7147e8a0fc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"com", "[", 
  RowBox[{
   RowBox[{"exp", "[", 
    RowBox[{"a", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"exp", "[", 
    RowBox[{"a", "[", 
     RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929087969067669*^9, 3.9290880255492573`*^9}, {
   3.929337307877578*^9, 3.929337344236206*^9}, {3.930795695559414*^9, 
   3.930795705635412*^9}, {3.9307957455387917`*^9, 3.930795747484484*^9}, {
   3.930795838100935*^9, 3.93079585245513*^9}, 3.930795895195168*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[31]:=",ExpressionUUID->"178f4c90-105d-4f7c-9561-6f890e2eb40d"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.9307957247705297`*^9, 3.930795748075673*^9}, {
   3.930795841954536*^9, 3.9307958528182898`*^9}, 3.930795907132227*^9, 
   3.930796929119084*^9, 3.931337516014054*^9, 3.933068885749547*^9, 
   3.933069023917211*^9, 3.933993370502281*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"97858c5c-0e4e-4097-9f0b-5d0d091f5db0"]
}, Open  ]],

Cell["but", "Text",
 CellChangeTimes->{{3.930795854770713*^9, 3.930795855119093*^9}, {
  3.930795932987718*^9, 
  3.93079593321353*^9}},ExpressionUUID->"a1494f3d-6c73-4fb5-b7a6-\
026daa7749f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{
   RowBox[{"cosetVirasoroOp", "[", 
    RowBox[{"1", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "]"}], "[", 
   RowBox[{
    RowBox[{"exp", "[", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{"a", "[", 
      RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.930795866440542*^9, 3.930795876325179*^9}, {
  3.930795911254693*^9, 3.930795914266428*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[32]:=",ExpressionUUID->"228dfa2b-288a-414b-a500-d84774223666"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"exp", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "d"}], "-", 
    RowBox[{"2", " ", "r"}], "+", "s"}], "]"}]}]], "Output",
 CellChangeTimes->{3.930795878399444*^9, 3.930795916300494*^9, 
  3.9307969311646767`*^9, 3.931337517619632*^9, 3.933068887307856*^9, 
  3.9330690253888683`*^9, 3.933993373017705*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"881e75f9-8b8b-4fbf-95a3-861318e8c746"]
}, Open  ]],

Cell[TextData[{
 "So  the coset Virasoro Operator maps states from outside of F into F.\n\nTo \
overcome this flaw we introduce yet another structure. The tensor product of \
DDF states ",
 StyleBox["ddfTp",
  FontWeight->"Bold"],
 ".\nThis product does not evaluate to anything but it allows us to write \
expressions such as the vanishing commutator in a well defined way.\n\
Subsequently we have the operators ",
 StyleBox["sugawaraOpTp",
  FontWeight->"Bold"],
 " and ",
 StyleBox["cosetVirasoroOpTp",
  FontWeight->"Bold"],
 " that act on ",
 StyleBox["ddfTp",
  FontWeight->"Bold"],
 ".\nWe can then briefly check that the coset Virasoro algebra is satisfied \
on the ",
 StyleBox["ddfTp",
  FontWeight->"Bold"],
 " with the correct central charge"
}], "Text",
 CellChangeTimes->{{3.930795935497356*^9, 
  3.930796152197495*^9}},ExpressionUUID->"b826a09b-9f65-4f92-a39f-\
533d3d34f4a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", "l_", "]"}], ":=", 
  RowBox[{"1", "-", 
   FractionBox["6", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"l", "+", "2"}], ")"}]}]]}]}]], "Input",
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[33]:=",ExpressionUUID->"95a8b741-3447-44be-b32e-caa2a0fcbcaf"],

Cell["Subsequently we find", "Text",
 CellChangeTimes->{{3.9307961878917418`*^9, 
  3.9307961959306593`*^9}},ExpressionUUID->"c0667d97-1181-4b32-a7b2-\
89fba56a89a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l1", "=", "1"}], ",", 
      RowBox[{"l2", "=", "1"}], ",", 
      RowBox[{"m", "=", "2"}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"-", "2"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"cosetVirasoroOpTp", "[", 
          RowBox[{"l1", ",", "l2", ",", "m"}], "]"}], "[", 
         RowBox[{
          RowBox[{"cosetVirasoroOpTp", "[", 
           RowBox[{"l1", ",", "l2", ",", "n"}], "]"}], "[", "#", "]"}], "]"}],
         "-", 
        RowBox[{
         RowBox[{"cosetVirasoroOpTp", "[", 
          RowBox[{"l1", ",", "l2", ",", "n"}], "]"}], "[", 
         RowBox[{
          RowBox[{"cosetVirasoroOpTp", "[", 
           RowBox[{"l1", ",", "l2", ",", "m"}], "]"}], "[", "#", "]"}], 
         "]"}]}], "==", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m", "-", "n"}], ")"}], "*", 
         RowBox[{
          RowBox[{"cosetVirasoroOpTp", "[", 
           RowBox[{"l1", ",", "l2", ",", 
            RowBox[{"m", "+", "n"}]}], "]"}], "[", "#", "]"}]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"c", "[", 
           RowBox[{"l1", "+", "l2"}], "]"}], "12"], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["m", "3"], "-", "m"}], ")"}], 
         RowBox[{"KroneckerDelta", "[", 
          RowBox[{
           RowBox[{"m", "+", "n"}], ",", "0"}], "]"}], "*", "#"}]}]}], "&"}], 
     "[", 
     RowBox[{"ddfTp", "[", 
      RowBox[{
       RowBox[{
        SqrtBox["2"], 
        RowBox[{"exp", "[", 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"ddfProd", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"A", "[", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
         RowBox[{"exp", "[", 
          RowBox[{"a", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "]"}]}], "]"}], "]"}]}], 
   "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.9307962221053476`*^9, 3.930796395281289*^9}, {
  3.93079652867996*^9, 3.930796531625986*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[34]:=",ExpressionUUID->"ae8bd422-d014-4457-a99e-1e89abe8b184"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.930796375124199*^9, 3.930796398299427*^9}, 
   3.930796534705459*^9, 3.930796935415492*^9, 3.93133752084995*^9, 
   3.933068890712101*^9, 3.933069028612952*^9, 3.933993377945709*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"ee17969c-56de-41ec-a321-a4e089d5c676"]
}, Open  ]],

Cell[TextData[{
 "When reducing the ",
 StyleBox["ddfTp",
  FontWeight->"Bold"],
 " to the commutator ",
 StyleBox["com",
  FontWeight->"Bold"],
 " the action of ",
 StyleBox["cosetVirasoroOp",
  FontWeight->"Bold"],
 " and ",
 StyleBox["cosetVirasoroOpTp",
  FontWeight->"Bold"],
 " agree"
}], "Text",
 CellChangeTimes->{{3.9307965058161716`*^9, 
  3.93079657770835*^9}},ExpressionUUID->"5c3fc224-bb9f-4142-8dc6-\
4ee6d9bb42cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceAll", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"cosetVirasoroOpTp", "[", 
          RowBox[{"1", ",", "1", ",", 
           RowBox[{"-", "1"}]}], "]"}], "[", 
         RowBox[{"ddfTp", "[", 
          RowBox[{
           RowBox[{"exp", "[", 
            RowBox[{"a", "[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"exp", "[", 
            RowBox[{"a", "[", 
             RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"ddfTp", "->", "com"}]}], "]"}], "//", "Expand"}], ",", 
     RowBox[{
      RowBox[{"eps", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], "->", "1"}]}], "]"}], "==", 
   RowBox[{
    RowBox[{"cosetVirasoroOp", "[", 
     RowBox[{"1", ",", "1", ",", 
      RowBox[{"-", "1"}]}], "]"}], "[", 
    RowBox[{
     RowBox[{"exp", "[", 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "]"}]}], "]"}]}], "//", 
  "Quiet"}]], "Input",
 CellChangeTimes->{{3.930796592104425*^9, 3.93079662075102*^9}, {
  3.930796656529083*^9, 3.930796710559466*^9}, {3.930796762197891*^9, 
  3.930796840063661*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[35]:=",ExpressionUUID->"5a310dd8-3495-4577-90dc-9ec89dc56499"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.930796782052011*^9, 3.930796814308483*^9}, 
   3.930796851357965*^9, 3.93079694906637*^9, 3.931337529932433*^9, 
   3.933068899596044*^9, 3.9330690372946987`*^9, 3.933993392024734*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"f6b607af-ee17-4b1e-b464-bc0e026c2a7c"]
}, Open  ]],

Cell[TextData[{
 "For completeness we mention that we have also introduced a Sugawara \
operator acting on the ",
 StyleBox["ddfTp",
  FontWeight->"Bold"],
 ". \nThe operator is called ",
 StyleBox["sugawaraOpTp",
  FontWeight->"Bold"],
 " and it works like the ",
 StyleBox["cosetVirasoroOpTp",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.930796972770233*^9, 
  3.930797052735972*^9}},ExpressionUUID->"3f786b36-9960-4a4b-95f2-\
6a32c3d68103"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multi-Commutators", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 
  3.928502167211561*^9}},ExpressionUUID->"fec0b72e-934f-430a-bad1-\
febaab88e778"],

Cell[TextData[{
 "This  section introduces the Chevalley-Serre generators ",
 StyleBox["e[i]",
  FontWeight->"Bold"],
 ", ",
 StyleBox["f[i]",
  FontWeight->"Bold"],
 " and ",
 StyleBox["h[i]",
  FontWeight->"Bold"],
 " as well as the multi-commutator function ",
 StyleBox["multiCom",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.9290099254399767`*^9, 
  3.929010000577483*^9}},ExpressionUUID->"4071d545-fe05-4ab6-af0f-\
9071b4db2660"],

Cell[TextData[{
 "The traditional way of generating the level l of the Lie algebra of \
physical states is via multi-commutators. \nThe DDF package can compute \
multi-commutators and relate them to DDF states.\nIt contains definitions for \
the Chevalley-Serre generators ",
 StyleBox["e[i]",
  FontWeight->"Bold"],
 ", ",
 StyleBox["f[i]",
  FontWeight->"Bold"],
 " and ",
 StyleBox["h[i]",
  FontWeight->"Bold"],
 " according to (2.125) - (2.127)  from [1].\nFor example we have"
}], "Text",
 CellChangeTimes->{{3.929010003346966*^9, 3.929010064049683*^9}, {
  3.929010102332329*^9, 3.929010134911827*^9}, {3.929010382453086*^9, 
  3.929010441851128*^9}, {3.929088106327518*^9, 3.929088123784173*^9}, {
  3.929088163004791*^9, 3.92908822513338*^9}, {3.933068902615036*^9, 
  3.933068903021193*^9}},ExpressionUUID->"2a7ef30d-e477-43a0-abb6-\
7d95bf69565b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e", "[", 
  RowBox[{"-", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.929010084491667*^9, 3.929010086347173*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[36]:=",ExpressionUUID->"61e6470f-901a-4ee9-949b-60943f91d6c5"],

Cell[BoxData[
 RowBox[{"exp", "[", "r", "]"}]], "Output",
 CellChangeTimes->{3.929093741570014*^9, 3.929337633896289*^9, 
  3.9307969491072617`*^9, 3.9313375724510946`*^9, 3.933068899642771*^9, 
  3.933069037333446*^9, 3.933993392065628*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"94b2ed71-c59c-483e-93ed-f7dc303098d7"]
}, Open  ]],

Cell["\<\
It  is an easy exercise to show that these generators obey an SL(2) algebra\
\>", "Text",
 CellChangeTimes->{{3.929010454797808*^9, 3.9290104984939747`*^9}, {
  3.929088231410458*^9, 
  3.9290882356531076`*^9}},ExpressionUUID->"f4ef9266-36bd-4714-a679-\
e808e92b4416"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"com", "[", 
       RowBox[{
        RowBox[{"h", "[", 
         RowBox[{"i", "-", "2"}], "]"}], ",", 
        RowBox[{"h", "[", 
         RowBox[{"j", "-", "2"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"com", "[", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"i", "-", "2"}], "]"}], ",", 
         RowBox[{"e", "[", 
          RowBox[{"j", "-", "2"}], "]"}]}], "]"}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"cartanMatrix", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}], 
        RowBox[{"e", "[", 
         RowBox[{"j", "-", "2"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"com", "[", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"i", "-", "2"}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"j", "-", "2"}], "]"}]}], "]"}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"cartanMatrix", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}], 
        RowBox[{"f", "[", 
         RowBox[{"j", "-", "2"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"com", "[", 
        RowBox[{
         RowBox[{"e", "[", 
          RowBox[{"i", "-", "2"}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"j", "-", "2"}], "]"}]}], "]"}], "-", 
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"i", ",", "j"}], "]"}], " ", 
        RowBox[{"h", "[", 
         RowBox[{"i", "-", "2"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "==", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.927035311271276*^9, 3.927035314735846*^9}, {
   3.927035487811827*^9, 3.927035492475311*^9}, {3.927036085488209*^9, 
   3.927036085682664*^9}, {3.927036870408459*^9, 3.927036873677717*^9}, {
   3.927079839483001*^9, 3.927079886091655*^9}, 3.927978293750327*^9, 
   3.928922047430469*^9, 3.929010542623871*^9, {3.929010582896739*^9, 
   3.929010627733223*^9}, 3.929010782457635*^9, {3.929010850673699*^9, 
   3.929010907639325*^9}, {3.929010943268349*^9, 3.929010966185721*^9}, {
   3.9290110117377462`*^9, 3.929011052149963*^9}, {3.93124284052557*^9, 
   3.9312428489606943`*^9}, 3.93133752922332*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[37]:=",ExpressionUUID->"c0b5f758-11df-4706-bdea-50b5f465a24c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.929093759024915*^9, 3.929337650612049*^9, 
  3.930796967717471*^9, 3.931242864902146*^9, 3.931337589556035*^9, 
  3.93306891622505*^9, 3.933069053718277*^9, 3.933993419462235*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"3ec488b5-5ead-48fc-b047-23a0e794d894"]
}, Open  ]],

Cell[TextData[{
 "Our DDF state from above is a linear combination of the two \
multi-commutators ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "1", ",", "0", ",", "1"}]], 
   TraditionalForm]],ExpressionUUID->"65dae456-43e8-4867-b04f-ab311e949950"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "0", ",", "1"}]], 
   TraditionalForm]],ExpressionUUID->"c130ab62-6588-4649-8786-7ad3ccf134c7"],
 ", where we use the convention ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["e", 
     RowBox[{"letter", ",", " ", "word"}]], "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["e", "letter"], ",", " ", 
      SubscriptBox["e", "word"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "242fe48f-8702-4208-a0de-2d91dc756b1e"],
 ". \nThe function that implements this is called ",
 StyleBox["multiCom",
  FontWeight->"Bold"],
 ". It takes two or more integers from the set {-1, 0, 1} as an argument and \
returns a linear combination of ",
 StyleBox["tp",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.929011075998157*^9, 3.9290112733967876`*^9}, {
  3.929011892303574*^9, 3.929011892546379*^9}, {3.9290882585595512`*^9, 
  3.929088265488555*^9}},ExpressionUUID->"3c08336a-7096-452f-8366-\
4b9dcc1d1459"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"multi233", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"multiCom", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0", ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "1", ",", "0", ",", "1"}], 
     "]"}], "-", 
    RowBox[{"multiCom", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", "0", ",", 
      RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "0", ",", "1"}], "]"}]}], "//",
    "Expand"}]}]], "Input",
 CellChangeTimes->{{3.928921604671635*^9, 3.928921681260732*^9}, {
   3.928921725158448*^9, 3.92892174309001*^9}, 3.929010553620643*^9, {
   3.929011348524349*^9, 3.929011355735271*^9}, {3.929011410621807*^9, 
   3.929011425292554*^9}, {3.929011489595399*^9, 3.929011534481127*^9}, {
   3.9290882685282393`*^9, 3.929088270209844*^9}, {3.9290883002155724`*^9, 
   3.929088300567245*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[38]:=",ExpressionUUID->"2aabacf3-4b07-4a84-a450-25d0ba819e91"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{"d", "[", 
        RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{"r", "[", 
        RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{"s", "[", 
        RowBox[{"-", "3"}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "2"}], "]"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"tp", "[", 
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"-", "2"}], "]"}], ",", 
       RowBox[{"s", "[", 
        RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "d"}], "-", 
      RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "2"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"4", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"-", "2"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"-", "2"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"-", "2"}], "]"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"3", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"tp", "[", 
    RowBox[{
     RowBox[{"prod", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"r", "[", 
         RowBox[{"-", "1"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}]}], "]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.929093767958342*^9, 3.929337659832774*^9, 
  3.930796981711729*^9, 3.9313375932786903`*^9, 3.9330689162642803`*^9, 
  3.933069057463908*^9, 3.933993424729554*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"7e1c1d9b-07fb-4087-b462-749266d82419"]
}, Open  ]],

Cell[TextData[{
 "Converting this ",
 StyleBox["tp",
  FontWeight->"Bold"],
 " expression to a ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 " we find that it agrees with our state from above"
}], "Text",
 CellChangeTimes->{{3.929011297539693*^9, 3.929011326402204*^9}, {
  3.929088289003261*^9, 
  3.929088290856971*^9}},ExpressionUUID->"a404b7c0-8845-46b7-b7e6-\
eea37b9d861b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceAll", "[", 
   RowBox[{
    RowBox[{"toDDF", "[", "multi233", "]"}], ",", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"_", ",", 
       RowBox[{"-", "1"}]}], "]"}], "->", "0"}]}], "]"}], "-", 
  "state233"}]], "Input",
 CellChangeTimes->{{3.928921745645735*^9, 3.928921770201743*^9}, {
  3.929011331334466*^9, 3.929011342673325*^9}, {3.929011379865681*^9, 
  3.929011402714097*^9}, {3.929011473283589*^9, 3.929011485376558*^9}, {
  3.92901151748356*^9, 3.929011527517122*^9}, {3.929088277571745*^9, 
  3.929088307586205*^9}, {3.931337540755874*^9, 3.931337542871541*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[39]:=",ExpressionUUID->"e7db712c-bb4f-46e1-b1de-10dbeea45bff"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.929093768161294*^9, 3.929337660018742*^9, 
  3.930796982058899*^9, 3.9313375935198193`*^9, 3.933068916269835*^9, 
  3.933069057693865*^9, 3.933993425024489*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"acef1cda-8aea-4760-b1f6-c2125114bc9c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Miscellaneous Functions", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 3.928502144048772*^9}, {3.929011578545742*^9, 
  3.9290115794888687`*^9}, {3.929092709769855*^9, 
  3.929092718247508*^9}},ExpressionUUID->"39424ccc-6d0f-4b46-bfb6-\
53a94f6b7590"],

Cell[TextData[{
 "This  section introduces the functions ",
 StyleBox["ddfStatesList",
  FontWeight->"Bold"],
 ", ",
 StyleBox["fileNamesList",
  FontWeight->"Bold"],
 ", ",
 StyleBox["linearIndependentQ",
  FontWeight->"Bold"],
 " and ",
 StyleBox["rank",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.9290099254399767`*^9, 3.929010000577483*^9}, {
   3.929092736063826*^9, 3.929092796304947*^9}, 
   3.929092927435223*^9},ExpressionUUID->"c10c0d96-9b15-4296-84d5-\
176a1736e74f"],

Cell["\<\
There are a few more functions in the DDF package that we will briefly \
introduce here.\
\>", "Text",
 CellChangeTimes->{{3.929092797433453*^9, 
  3.929092819629119*^9}},ExpressionUUID->"e90f81c4-00a2-419e-95d6-\
91b010b4f931"],

Cell[TextData[{
 StyleBox["ddfStatesList[l, m, w] ",
  FontWeight->"Bold"],
 "gives us a list of all DDF states for a given level, mode sum and weight."
}], "Text",
 CellChangeTimes->{{3.9290928235978403`*^9, 3.929092827251143*^9}, {
  3.929092930530285*^9, 
  3.929092977967422*^9}},ExpressionUUID->"6b9d0a59-7b4f-47bc-b0e0-\
7ee3ccb73ab6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddfStatesList", "[", 
  RowBox[{"2", ",", "1", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9290929479337273`*^9, 3.92909298033174*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[40]:=",ExpressionUUID->"cfa8fd95-0029-44d0-b272-2656489f4153"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ddfProd", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}], "-", "s"}], "]"}]}], "]"}], ",", 
   RowBox[{"ddfProd", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"B", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
     RowBox[{"exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "d"}], "-", 
       RowBox[{"2", " ", "r"}], "-", "s"}], "]"}]}], "]"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.9290937681674595`*^9, 3.929337660024722*^9, 
  3.930796982065732*^9, 3.931337593550108*^9, 3.933068916293775*^9, 
  3.933069057699391*^9, 3.9339934250301933`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"60784e3b-29e2-44d0-b32f-8221c6b201d9"]
}, Open  ]],

Cell[TextData[{
 StyleBox["fileNamesList[l, m, w] ",
  FontWeight->"Bold"],
 "gives us the file names for these DDF states"
}], "Text",
 CellChangeTimes->{{3.9290929910665283`*^9, 3.929093018693659*^9}},
 FontWeight->"Plain",ExpressionUUID->"8c132448-d8c0-4f22-8292-8a0c8c2b5942"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["fileNamesList",
   FontWeight->"Bold"], "[", 
  RowBox[{"2", ",", "1", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{3.929093023950036*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[41]:=",ExpressionUUID->"10347206-aaa7-4b77-b704-b581b78d7663"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ddf_states/level_2/mode_1/l2m1nm1_A1.txt\"\>", 
   ",", "\<\"ddf_states/level_2/mode_1/l2m1nm1_B1.txt\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{3.929093768194098*^9, 3.929337660041655*^9, 
  3.930796982090086*^9, 3.93133759357076*^9, 3.933068916299758*^9, 
  3.93306905772023*^9, 3.93399342505473*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"f6bc0f21-8da1-46af-ac2a-261ae072dbf6"]
}, Open  ]],

Cell[TextData[{
 "The function ",
 StyleBox["linearIndependentQ",
  FontWeight->"Bold"],
 " checks if a list of ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 " or ",
 StyleBox["tp",
  FontWeight->"Bold"],
 " is linearly independent"
}], "Text",
 CellChangeTimes->{{3.929093045364472*^9, 3.929093079416512*^9}, 
   3.929093135425345*^9},ExpressionUUID->"75036ce8-b27b-4894-93a8-\
48bf024291ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linearIndependenQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ddfProd", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"A", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}], "-", "s"}], "]"}]}], "]"}], ",", 
    RowBox[{"ddfProd", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}], "-", "s"}], "]"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.929093084108746*^9, 3.929093087708436*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[42]:=",ExpressionUUID->"9422799f-61b3-4673-a56d-ffb279f4d618"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.92909376820051*^9, 3.929337660047292*^9, 
  3.930796982097*^9, 3.931337593576241*^9, 3.933068916322194*^9, 
  3.933069057726831*^9, 3.9339934250636263`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"85d48937-ec06-4220-906d-16e3752b700e"]
}, Open  ]],

Cell[TextData[{
 "Finally, ",
 StyleBox["rank",
  FontWeight->"Bold"],
 " tells us how many linearly independent elements are in a list of ",
 StyleBox["ddfProd",
  FontWeight->"Bold"],
 " or ",
 StyleBox["tp",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.92909309050911*^9, 
  3.929093131835473*^9}},ExpressionUUID->"77ddc36e-acde-4d23-aba7-\
8955ba58a25b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rank", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ddfProd", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"A", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}], "-", "s"}], "]"}]}], "]"}], ",", 
    RowBox[{"ddfProd", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"B", "[", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "]"}], "}"}], ",", 
      RowBox[{"exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "d"}], "-", 
        RowBox[{"2", " ", "r"}], "-", "s"}], "]"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.929093141069091*^9, 3.929093141520096*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[43]:=",ExpressionUUID->"2789d114-67bf-4b15-a05e-37ee6704a3b8"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.929093768225407*^9, 3.929337660063595*^9, 
  3.930796982120498*^9, 3.931337593581251*^9, 3.933068916328636*^9, 
  3.9330690577480707`*^9, 3.933993425087223*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"bb1e506d-9f25-4fa2-88a4-e65288b03ecc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Outlook", "Section",
 CellChangeTimes->{{3.92155097131364*^9, 3.921550978481032*^9}, {
  3.921552028244055*^9, 3.921552031202983*^9}, {3.921552242362626*^9, 
  3.921552266189774*^9}, {3.9224175534957933`*^9, 3.922417558868132*^9}, {
  3.922789700991434*^9, 3.92278970336543*^9}, {3.923717112497119*^9, 
  3.923717115096305*^9}, {3.925270943181433*^9, 3.925270947232717*^9}, {
  3.92850207120757*^9, 3.928502144048772*^9}, {3.929011578545742*^9, 
  3.9290115794888687`*^9}},ExpressionUUID->"6fe944da-5442-4d3c-ae97-\
2e896cd25728"],

Cell[TextData[{
 "This concludes the brief introduction to the DDF package.\nThe package is \
still under active development. In the short term the development goals are \
to add more DDF states to the ",
 StyleBox["ddf_states",
  FontWeight->"Bold"],
 " folder..\n\nA more long term goal is to write a function that generates \
all DDF states at a given level and depth automatically starting from the \
ground states at the given level.\n\nMoreover, this documentation will be \
updated in the future with better references once our paper on the DDF \
construction of the Feingold-Frenkel algebra has been published."
}], "Text",
 CellChangeTimes->{{3.929011580859182*^9, 3.92901183851687*^9}, {
  3.929088317205049*^9, 3.929088384840806*^9}, {3.9293375948256598`*^9, 
  3.929337596129775*^9}},ExpressionUUID->"b5131f05-3773-4cfe-8ac8-\
58598c0be949"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1907, 1316},
WindowMargins->{{253, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
SpellingDictionaries->{"CorrectWords"->{
 "Hannes", "Sugawara", "Virasoro", "tp"}},
FrontEndVersion->"14.0 for Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6c580ead-4105-484f-aaf3-17168141a67b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 419, 6, 98, "Title",ExpressionUUID->"324eedc2-fcfb-4ef8-9ebd-67744a40b034"],
Cell[1002, 30, 532, 9, 58, "Text",ExpressionUUID->"0bc06f1b-6744-482e-8275-2939b6c1ef08"],
Cell[1537, 41, 783, 14, 81, "Text",ExpressionUUID->"91cf96d2-4143-4ade-ae72-b66f0ce2fee2"],
Cell[2323, 57, 326, 7, 35, "Text",ExpressionUUID->"6e350127-321e-4056-86d1-eb2e46d6488d"],
Cell[2652, 66, 280, 6, 35, "Text",ExpressionUUID->"ec3611f0-241a-40e1-8304-9fc300427f18"],
Cell[2935, 74, 312, 7, 35, "Text",ExpressionUUID->"65046266-77ce-4abc-9c3a-55e8f49f46e8"],
Cell[3250, 83, 287, 8, 81, "Text",ExpressionUUID->"0b8011ca-3524-4e3d-8b1e-b0e782a9271f"],
Cell[CellGroupData[{
Cell[3562, 95, 495, 8, 67, "Section",ExpressionUUID->"de116a59-eea6-4f5d-be24-e8bd670b37bc"],
Cell[4060, 105, 1306, 37, 58, "Text",ExpressionUUID->"1b3faa08-53f3-42e3-b118-31fb5a12a5be"],
Cell[5369, 144, 247, 4, 35, "Text",ExpressionUUID->"e866583a-ac64-4e08-9a61-6879112af542"],
Cell[5619, 150, 234, 5, 46, "Input",ExpressionUUID->"406a4a49-8ea8-4f8d-9cda-cc49c6d17352"],
Cell[5856, 157, 317, 7, 35, "Text",ExpressionUUID->"00016a96-888a-4b5d-aa94-daf4dbfa0621"],
Cell[6176, 166, 268, 5, 46, "Input",ExpressionUUID->"9d608f72-37b6-4f5b-8d18-7ab7d0a7e43c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6481, 176, 600, 9, 67, "Section",ExpressionUUID->"47d4eac4-951e-44e9-a076-c92b2de377ec"],
Cell[7084, 187, 247, 4, 35, "Text",ExpressionUUID->"e699c60e-dd05-4208-af78-50b5af77c449"],
Cell[CellGroupData[{
Cell[7356, 195, 373, 6, 46, "Input",ExpressionUUID->"ddbe26cb-cedd-4f3a-a2a1-cfa03393e49a"],
Cell[CellGroupData[{
Cell[7754, 205, 426, 7, 24, "Print",ExpressionUUID->"613b949d-a297-41fe-b1a3-23cfdc380b7e"],
Cell[8183, 214, 540, 9, 24, "Print",ExpressionUUID->"08f56a1d-5524-4ba3-9c53-8d29adb2e1cf"],
Cell[8726, 225, 523, 9, 24, "Print",ExpressionUUID->"d5171ab1-8c49-43a4-90e9-b3a519f22d94"],
Cell[9252, 236, 550, 9, 24, "Print",ExpressionUUID->"3a11240a-5d4c-4b0b-b0b3-0d36190d594d"],
Cell[9805, 247, 392, 7, 24, "Print",ExpressionUUID->"bd52b329-5281-43d7-8e78-4bf22e6525ce"],
Cell[10200, 256, 423, 7, 24, "Print",ExpressionUUID->"2c95b608-c5ce-4e56-9b30-833b616f050e"]
}, Open  ]]
}, Open  ]],
Cell[10650, 267, 284, 4, 35, "Text",ExpressionUUID->"9c2cc841-5d22-4535-b83c-ab2b6b004dc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10971, 276, 706, 10, 67, "Section",ExpressionUUID->"7e0b1f30-0b13-46a3-9828-b89ca1a397bd"],
Cell[11680, 288, 316, 6, 35, "Text",ExpressionUUID->"45ff3782-28c9-4529-8849-6577c89acbf3"],
Cell[CellGroupData[{
Cell[12021, 298, 194, 4, 46, "Input",ExpressionUUID->"2d5cc28f-59ff-4844-9c96-6ea976d40fde"],
Cell[12218, 304, 17293, 422, 158, "Output",ExpressionUUID->"4dfb80c2-f74c-48aa-bd22-2231d982f28c"]
}, Open  ]],
Cell[29526, 729, 342, 7, 35, "Text",ExpressionUUID->"77986e4d-42c2-4cb4-b907-7d464a93c291"],
Cell[CellGroupData[{
Cell[29893, 740, 421, 7, 46, "Input",ExpressionUUID->"3ebb189a-05f3-47a4-90ce-fb2f513115ea"],
Cell[30317, 749, 14906, 336, 95, "Output",ExpressionUUID->"d083983d-4f66-45bf-a4af-e1199f5dc9c4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45272, 1091, 554, 8, 67, "Section",ExpressionUUID->"fd418012-cff4-49d5-b926-8dc3aecdceab"],
Cell[45829, 1101, 339, 11, 55, "Text",ExpressionUUID->"a1260ace-aad9-486c-9f36-db649ae097dc"],
Cell[46171, 1114, 286, 7, 35, "Text",ExpressionUUID->"f77e50de-eb30-4f4c-8a08-0b6cc55d920b"],
Cell[46460, 1123, 401, 10, 35, "Text",ExpressionUUID->"c78a4adc-26f1-4c1c-a4cb-870304a4c9a8"],
Cell[CellGroupData[{
Cell[46886, 1137, 252, 4, 46, "Input",ExpressionUUID->"59a95f9d-c86d-4694-bc50-5c6515e3ff2c"],
Cell[47141, 1143, 903, 26, 79, "Output",ExpressionUUID->"69c92469-3a11-4cda-b43b-382eda1eb0b2"]
}, Open  ]],
Cell[48059, 1172, 1669, 54, 35, "Text",ExpressionUUID->"52c06a40-c64a-4712-b990-edf054e1854c"],
Cell[49731, 1228, 283, 8, 35, "Text",ExpressionUUID->"4a9b11fa-8c7b-4654-9bda-61f0d9fee85b"],
Cell[CellGroupData[{
Cell[50039, 1240, 311, 6, 46, "Input",ExpressionUUID->"3b59cefa-cc68-435c-b42d-6adb81d92359"],
Cell[50353, 1248, 324, 5, 34, "Output",ExpressionUUID->"c70c49bf-5376-48ec-ae61-783ba27e310a"]
}, Open  ]],
Cell[50692, 1256, 213, 3, 35, "Text",ExpressionUUID->"416b4ac0-8b40-40c0-b540-1d3fb60da975"],
Cell[CellGroupData[{
Cell[50930, 1263, 333, 7, 46, "Input",ExpressionUUID->"7e28ead2-efe5-48b6-b8b4-5eabcb5ce4af"],
Cell[51266, 1272, 310, 4, 34, "Output",ExpressionUUID->"09d05271-4c61-407c-a0a9-7814bad5163f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51625, 1282, 500, 8, 67, "Section",ExpressionUUID->"6437f9b3-5589-4790-b648-15e3f6e1d68e"],
Cell[52128, 1292, 560, 26, 55, "Text",ExpressionUUID->"05207a5b-ea9d-45f0-928c-1e55d20729da"],
Cell[52691, 1320, 6906, 185, 705, "Text",ExpressionUUID->"6cc3f478-2873-49bf-a699-1ab33203e3fc"],
Cell[59600, 1507, 243, 4, 35, "Text",ExpressionUUID->"13ec8f1b-2945-4de5-8b59-6b90b2e6e5fe"],
Cell[CellGroupData[{
Cell[59868, 1515, 492, 12, 46, "Input",ExpressionUUID->"2f9080b3-fd60-41b3-adc5-8a4bcf9e0a49"],
Cell[60363, 1529, 644, 17, 55, "Output",ExpressionUUID->"ea3f069e-61c0-4164-a834-b1f771de5aef"]
}, Open  ]],
Cell[61022, 1549, 472, 11, 58, "Text",ExpressionUUID->"980f2c03-104a-4189-8e22-3478029ea18b"],
Cell[61497, 1562, 274, 6, 35, "Text",ExpressionUUID->"50040efc-22f2-4eb8-b9fd-767ee2b4fd2c"],
Cell[CellGroupData[{
Cell[61796, 1572, 552, 15, 46, "Input",ExpressionUUID->"e6da2484-8d11-466e-8e96-e44922523b56"],
Cell[62351, 1589, 2707, 84, 49, "Output",ExpressionUUID->"53fea1b2-9e51-444c-80d0-33c0797da952"]
}, Open  ]],
Cell[65073, 1676, 483, 9, 35, "Text",ExpressionUUID->"c83e116f-be65-4ebd-b783-99b3f1115449"],
Cell[CellGroupData[{
Cell[65581, 1689, 1044, 33, 46, "Input",ExpressionUUID->"a4fa0d28-c117-4d37-b0e4-8254285fac91"],
Cell[66628, 1724, 477, 10, 34, "Output",ExpressionUUID->"9e2aeec4-9782-4099-8e5e-37b0a04f3e96"]
}, Open  ]],
Cell[67120, 1737, 848, 17, 104, "Text",ExpressionUUID->"6b24cc53-4250-4179-adf8-98631ac9745a"],
Cell[CellGroupData[{
Cell[67993, 1758, 564, 16, 46, "Input",ExpressionUUID->"7826e56b-2251-4098-b3ef-7e371831654d"],
Cell[68560, 1776, 736, 20, 50, "Output",ExpressionUUID->"0d0d6eff-dcdd-4f46-9a25-bb83a79f3a71"]
}, Open  ]],
Cell[69311, 1799, 712, 22, 81, "Text",ExpressionUUID->"a18184d2-5b81-4b8e-b141-2b3a4c0ccf8b"],
Cell[CellGroupData[{
Cell[70048, 1825, 869, 25, 46, "Input",ExpressionUUID->"e0be158f-8e96-42c3-8cfd-20e8a549d024"],
Cell[70920, 1852, 1388, 42, 50, "Output",ExpressionUUID->"d6f4af98-f7cf-4d1d-be93-e6dda0f37283"]
}, Open  ]],
Cell[72323, 1897, 437, 15, 35, "Text",ExpressionUUID->"b417f870-3934-4628-ad41-e55a5b4f4ac0"],
Cell[CellGroupData[{
Cell[72785, 1916, 704, 20, 46, "Input",ExpressionUUID->"b29425cb-2576-4035-b20b-7ca6b935c97b"],
Cell[73492, 1938, 2722, 84, 50, "Output",ExpressionUUID->"6243a17c-1a75-44f9-b2f5-38a32ccb52ca"]
}, Open  ]],
Cell[76229, 2025, 543, 13, 58, "Text",ExpressionUUID->"1207e326-7530-49d3-9d55-87c3cfc39c39"],
Cell[76775, 2040, 243, 4, 35, "Text",ExpressionUUID->"56372d8c-5e5a-46e6-ae25-4a4ecd2c6475"],
Cell[CellGroupData[{
Cell[77043, 2048, 1004, 31, 46, "Input",ExpressionUUID->"74a3b0ed-6d60-4bfe-9ebb-2b48c78fdbea"],
Cell[78050, 2081, 312, 4, 34, "Output",ExpressionUUID->"b45dfd7e-9673-423b-b790-0ea1b57c521a"]
}, Open  ]],
Cell[78377, 2088, 560, 17, 35, "Text",ExpressionUUID->"97c80df4-ea67-4588-a9a5-e81460d7df81"],
Cell[CellGroupData[{
Cell[78962, 2109, 496, 13, 46, "Input",ExpressionUUID->"9c94e34d-17b5-4e0c-920a-86c6a92ce681"],
Cell[79461, 2124, 579, 12, 28, "Message",ExpressionUUID->"581120ad-b534-462f-b197-3efed83f9ffc"],
Cell[80043, 2138, 2280, 72, 64, "Output",ExpressionUUID->"8c3db5f5-7379-4fe3-8b20-cbdbb6177da3"]
}, Open  ]],
Cell[82338, 2213, 514, 15, 35, "Text",ExpressionUUID->"251e3833-8b32-4660-b6a1-6438adb7ad13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82889, 2233, 564, 8, 67, "Section",ExpressionUUID->"d432dd66-1cc1-4dd9-a26a-11a6003f0d65"],
Cell[83456, 2243, 359, 10, 55, "Text",ExpressionUUID->"2698e9df-92f0-4073-96db-ad5615243ebe"],
Cell[83818, 2255, 904, 25, 154, "Text",ExpressionUUID->"a58f2828-71cd-47e5-a3b5-16cc5198e5fd"],
Cell[CellGroupData[{
Cell[84747, 2284, 515, 13, 46, "Input",ExpressionUUID->"ac40804b-de97-4d7b-bb00-85715051ce40"],
Cell[85265, 2299, 313, 4, 34, "Output",ExpressionUUID->"0af504a7-970e-4347-888b-ed13707d2f6f"]
}, Open  ]],
Cell[85593, 2306, 869, 15, 81, "Text",ExpressionUUID->"00f90a08-78ee-4024-8a5c-7394f6e5caa1"],
Cell[CellGroupData[{
Cell[86487, 2325, 1026, 31, 46, "Input",ExpressionUUID->"5483aeff-ff93-4cf4-8285-8dfe259534f1"],
Cell[87516, 2358, 336, 5, 34, "Output",ExpressionUUID->"3bef28f0-1e90-4c9b-9888-506647492ede"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87901, 2369, 506, 8, 67, "Section",ExpressionUUID->"e1b7b934-a1c5-4e69-b594-e4684a722b28"],
Cell[88410, 2379, 382, 13, 55, "Text",ExpressionUUID->"d45c8efe-bffb-4838-88de-723100d3da17"],
Cell[88795, 2394, 991, 30, 81, "Text",ExpressionUUID->"1411bdb1-6c81-4e92-82f4-27ca0c1d54a4"],
Cell[CellGroupData[{
Cell[89811, 2428, 929, 25, 46, "Input",ExpressionUUID->"d097ced6-2739-4d66-b0e6-b6384e6635e1"],
Cell[90743, 2455, 11092, 350, 239, "Output",ExpressionUUID->"76726460-f869-4736-ae54-5729f363a91a"]
}, Open  ]],
Cell[101850, 2808, 1318, 36, 127, "Text",ExpressionUUID->"4475a907-91af-4ad4-b335-2fd8b7a20c13"],
Cell[CellGroupData[{
Cell[103193, 2848, 574, 12, 46, "Input",ExpressionUUID->"087cd175-ed2b-4aa5-9b19-3b8f5e80df97"],
Cell[103770, 2862, 6253, 210, 125, "Output",ExpressionUUID->"f0e107e5-b9e1-4378-835f-d045a73711ec"]
}, Open  ]],
Cell[110038, 3075, 333, 7, 35, "Text",ExpressionUUID->"368f58d4-71ec-4cac-aa63-da8a98ba6706"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110408, 3087, 549, 8, 67, "Section",ExpressionUUID->"23e0c77a-67a6-4e95-a278-a4f3109bfb74"],
Cell[110960, 3097, 276, 9, 55, "Text",ExpressionUUID->"cf3d0c60-3f8e-49a9-85ba-8de0839ccd12"],
Cell[111239, 3108, 2159, 42, 221, "Text",ExpressionUUID->"0eb44424-9011-4bf5-af20-885927e687b5"],
Cell[113401, 3152, 1361, 34, 150, "Text",ExpressionUUID->"a1fc543c-774b-4637-a863-d9087cbc008c"],
Cell[114765, 3188, 180, 3, 35, "Text",ExpressionUUID->"3ff1ca20-c58c-4fca-999d-3b74b78db5f6"],
Cell[CellGroupData[{
Cell[114970, 3195, 400, 8, 46, "Input",ExpressionUUID->"8f6fc885-250e-48ab-ad4b-9e4ae9c70b97"],
Cell[115373, 3205, 2456, 80, 50, "Output",ExpressionUUID->"de284008-e2df-4868-a8f8-0a29e15a96bd"]
}, Open  ]],
Cell[117844, 3288, 1178, 28, 173, "Text",ExpressionUUID->"d9a5220f-0b7e-4b35-b93a-3262f07a866f"],
Cell[CellGroupData[{
Cell[119047, 3320, 823, 20, 46, "Input",ExpressionUUID->"1a6f9b56-8be5-4d6c-8c04-c5459b4daedc"],
Cell[119873, 3342, 788, 22, 50, "Output",ExpressionUUID->"5c747d75-0776-420a-a6c3-b7ca2536978c"]
}, Open  ]],
Cell[120676, 3367, 502, 13, 35, "Text",ExpressionUUID->"8da1fc9a-e668-4c1f-9436-9382411c4b7f"],
Cell[121181, 3382, 625, 14, 58, "Text",ExpressionUUID->"e4311bd4-9593-4f57-b918-29e2589145ce"],
Cell[CellGroupData[{
Cell[121831, 3400, 1435, 44, 62, "Input",ExpressionUUID->"72b7eb0f-78d1-4d4d-9804-30d0d96e9544"],
Cell[123269, 3446, 525, 11, 28, "Message",ExpressionUUID->"5ebe3b70-87f0-4c2f-8b42-9dc589fdf97a"],
Cell[123797, 3459, 1301, 39, 49, "Output",ExpressionUUID->"fb215856-4e58-48dd-8584-9c76a05365b5"]
}, Open  ]],
Cell[125113, 3501, 626, 17, 58, "Text",ExpressionUUID->"87865b0b-e65b-4e48-b02d-dee47f9e650f"],
Cell[CellGroupData[{
Cell[125764, 3522, 394, 10, 46, "Input",ExpressionUUID->"bb6853be-db6b-41eb-9d78-7b3336cc4f4a"],
Cell[126161, 3534, 643, 17, 55, "Output",ExpressionUUID->"b9e31321-dee2-4e01-9337-4b77cb75d95d"]
}, Open  ]],
Cell[126819, 3554, 239, 6, 35, "Text",ExpressionUUID->"76800513-2504-4a05-8655-c7d0f8b0384c"],
Cell[CellGroupData[{
Cell[127083, 3564, 592, 17, 69, "Input",ExpressionUUID->"2c34fd4a-170e-48eb-9639-34d01eef4874"],
Cell[127678, 3583, 653, 13, 28, "Message",ExpressionUUID->"37b67e43-dfb8-4f00-a753-c5cf4d3c5cff"],
Cell[128334, 3598, 644, 17, 55, "Output",ExpressionUUID->"e509427d-307a-48dd-842f-7233008d7a1c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129027, 3621, 590, 8, 67, "Section",ExpressionUUID->"ecbe0a5b-6651-449c-80c4-a4e9eaf96f7f"],
Cell[129620, 3631, 570, 18, 55, "Text",ExpressionUUID->"0fabc277-04c6-4fc6-b957-2e1e7a133cf0"],
Cell[130193, 3651, 2706, 70, 474, "Text",ExpressionUUID->"3987635b-9ca9-4f6d-aa29-f8cb4fbc546e"],
Cell[CellGroupData[{
Cell[132924, 3725, 704, 17, 46, "Input",ExpressionUUID->"44712c7d-bd00-4c3a-8422-b408565aea2a"],
Cell[133631, 3744, 344, 6, 34, "Output",ExpressionUUID->"f5f289a0-b193-4917-aae8-14dfbdc2c1e1"]
}, Open  ]],
Cell[133990, 3753, 380, 8, 35, "Text",ExpressionUUID->"a4fbec31-be45-4cba-9d71-20b4cdaa7d47"],
Cell[CellGroupData[{
Cell[134395, 3765, 930, 26, 62, "Input",ExpressionUUID->"2a93438f-92bd-433e-a940-547387509349"],
Cell[135328, 3793, 1299, 41, 50, "Output",ExpressionUUID->"bea44b8d-e503-4493-ac62-5857d8e0a855"]
}, Open  ]],
Cell[136642, 3837, 820, 15, 150, "Text",ExpressionUUID->"73d83ef1-7eed-49a4-aad2-5cf8f28551c1"],
Cell[CellGroupData[{
Cell[137487, 3856, 569, 12, 46, "Input",ExpressionUUID->"082fa0cb-0544-4a2c-bb5b-01f5001ad99f"],
Cell[138059, 3870, 287, 4, 34, "Output",ExpressionUUID->"f3ad14d6-0e85-4b7c-bb2e-d8f152232ba5"]
}, Open  ]],
Cell[138361, 3877, 875, 18, 150, "Text",ExpressionUUID->"34a0bca3-175e-4ccd-8eda-fbd39808d75a"],
Cell[139239, 3897, 410, 7, 35, "Text",ExpressionUUID->"bcb97e16-ed6d-44da-b1c5-63d6900d03c8"],
Cell[139652, 3906, 609, 10, 58, "Text",ExpressionUUID->"4ca72df4-0173-4622-bd02-e8d92bc46839"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140298, 3921, 605, 9, 67, "Section",ExpressionUUID->"6bc04488-25fd-421b-b2df-b02609f45f01"],
Cell[140906, 3932, 575, 20, 55, "Text",ExpressionUUID->"e37ebbe3-6d7f-4ec5-889c-1f1f76be9753"],
Cell[141484, 3954, 2572, 72, 196, "Text",ExpressionUUID->"cc715176-2d53-46d1-88d8-ac2fec5b9b2a"],
Cell[CellGroupData[{
Cell[144081, 4030, 985, 31, 64, "Input",ExpressionUUID->"b3a2eb5f-97a0-4939-a09c-a068dc291ddf"],
Cell[145069, 4063, 604, 16, 50, "Output",ExpressionUUID->"67e6f890-2326-48fa-82d3-4ca5f789e3f3"]
}, Open  ]],
Cell[145688, 4082, 1417, 40, 150, "Text",ExpressionUUID->"0cfcc112-d8f2-4138-b245-c89aba30bd71"],
Cell[CellGroupData[{
Cell[147130, 4126, 876, 25, 64, "Input",ExpressionUUID->"e2c43d82-d19e-41ed-9b92-91391c384777"],
Cell[148009, 4153, 682, 18, 50, "Output",ExpressionUUID->"98f3cb84-fb8b-4af1-af02-91a2b3cbdd49"]
}, Open  ]],
Cell[148706, 4174, 356, 8, 58, "Text",ExpressionUUID->"ff49e936-54cb-4b13-9cc7-a7147e8a0fc6"],
Cell[CellGroupData[{
Cell[149087, 4186, 657, 14, 46, "Input",ExpressionUUID->"178f4c90-105d-4f7c-9561-6f890e2eb40d"],
Cell[149747, 4202, 367, 5, 34, "Output",ExpressionUUID->"97858c5c-0e4e-4097-9f0b-5d0d091f5db0"]
}, Open  ]],
Cell[150129, 4210, 193, 4, 35, "Text",ExpressionUUID->"a1494f3d-6c73-4fb5-b7a6-026daa7749f3"],
Cell[CellGroupData[{
Cell[150347, 4218, 621, 16, 46, "Input",ExpressionUUID->"228dfa2b-288a-414b-a500-d84774223666"],
Cell[150971, 4236, 448, 10, 34, "Output",ExpressionUUID->"881e75f9-8b8b-4fbf-95a3-861318e8c746"]
}, Open  ]],
Cell[151434, 4249, 892, 25, 150, "Text",ExpressionUUID->"b826a09b-9f65-4f92-a39f-533d3d34f4a8"],
Cell[152329, 4276, 367, 11, 64, "Input",ExpressionUUID->"95a8b741-3447-44be-b32e-caa2a0fcbcaf"],
Cell[152699, 4289, 166, 3, 35, "Text",ExpressionUUID->"c0667d97-1181-4b32-a7b2-89fba56a89a9"],
Cell[CellGroupData[{
Cell[152890, 4296, 2331, 68, 121, "Input",ExpressionUUID->"ae8bd422-d014-4457-a99e-1e89abe8b184"],
Cell[155224, 4366, 315, 4, 34, "Output",ExpressionUUID->"ee17969c-56de-41ec-a321-a4e089d5c676"]
}, Open  ]],
Cell[155554, 4373, 429, 17, 35, "Text",ExpressionUUID->"5c3fc224-bb9f-4142-8dc6-4ee6d9bb42cb"],
Cell[CellGroupData[{
Cell[156008, 4394, 1439, 40, 46, "Input",ExpressionUUID->"5a310dd8-3495-4577-90dc-9ec89dc56499"],
Cell[157450, 4436, 317, 4, 34, "Output",ExpressionUUID->"f6b607af-ee17-4b1e-b464-bc0e026c2a7c"]
}, Open  ]],
Cell[157782, 4443, 461, 15, 58, "Text",ExpressionUUID->"3f786b36-9960-4a4b-95f2-6a32c3d68103"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158280, 4463, 498, 8, 67, "Section",ExpressionUUID->"fec0b72e-934f-430a-bad1-febaab88e778"],
Cell[158781, 4473, 487, 18, 55, "Text",ExpressionUUID->"4071d545-fe05-4ab6-af0f-9071b4db2660"],
Cell[159271, 4493, 858, 20, 104, "Text",ExpressionUUID->"2a7ef30d-e477-43a0-abb6-7d95bf69565b"],
Cell[CellGroupData[{
Cell[160154, 4517, 255, 5, 46, "Input",ExpressionUUID->"61e6470f-901a-4ee9-949b-60943f91d6c5"],
Cell[160412, 4524, 320, 5, 34, "Output",ExpressionUUID->"94b2ed71-c59c-483e-93ed-f7dc303098d7"]
}, Open  ]],
Cell[160747, 4532, 278, 6, 35, "Text",ExpressionUUID->"f4ef9266-36bd-4714-a679-e808e92b4416"],
Cell[CellGroupData[{
Cell[161050, 4542, 2777, 73, 110, "Input",ExpressionUUID->"c0b5f758-11df-4706-bdea-50b5f465a24c"],
Cell[163830, 4617, 311, 4, 34, "Output",ExpressionUUID->"3ec488b5-5ead-48fc-b047-23a0e794d894"]
}, Open  ]],
Cell[164156, 4624, 1467, 41, 60, "Text",ExpressionUUID->"3c08336a-7096-452f-8366-4b9dcc1d1459"],
Cell[CellGroupData[{
Cell[165648, 4669, 957, 21, 46, "Input",ExpressionUUID->"2aabacf3-4b07-4a84-a450-25d0ba819e91"],
Cell[166608, 4692, 7016, 236, 146, "Output",ExpressionUUID->"7e1c1d9b-07fb-4087-b462-749266d82419"]
}, Open  ]],
Cell[173639, 4931, 381, 12, 35, "Text",ExpressionUUID->"a404b7c0-8845-46b7-b7e6-eea37b9d861b"],
Cell[CellGroupData[{
Cell[174045, 4947, 738, 16, 46, "Input",ExpressionUUID->"e7db712c-bb4f-46e1-b1de-10dbeea45bff"],
Cell[174786, 4965, 289, 4, 34, "Output",ExpressionUUID->"acef1cda-8aea-4760-b1f6-c2125114bc9c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175124, 4975, 601, 9, 67, "Section",ExpressionUUID->"39424ccc-6d0f-4b46-bfb6-53a94f6b7590"],
Cell[175728, 4986, 531, 19, 55, "Text",ExpressionUUID->"c10c0d96-9b15-4296-84d5-176a1736e74f"],
Cell[176262, 5007, 238, 6, 35, "Text",ExpressionUUID->"e90f81c4-00a2-419e-95d6-91b010b4f931"],
Cell[176503, 5015, 341, 8, 35, "Text",ExpressionUUID->"6b9d0a59-7b4f-47bc-b0e0-7ee3ccb73ab6"],
Cell[CellGroupData[{
Cell[176869, 5027, 302, 6, 46, "Input",ExpressionUUID->"cfa8fd95-0029-44d0-b272-2656489f4153"],
Cell[177174, 5035, 978, 29, 34, "Output",ExpressionUUID->"60784e3b-29e2-44d0-b32f-8221c6b201d9"]
}, Open  ]],
Cell[178167, 5067, 280, 6, 35, "Text",ExpressionUUID->"8c132448-d8c0-4f22-8292-8a0c8c2b5942"],
Cell[CellGroupData[{
Cell[178472, 5077, 313, 8, 46, "Input",ExpressionUUID->"10347206-aaa7-4b77-b704-b581b78d7663"],
Cell[178788, 5087, 429, 8, 34, "Output",ExpressionUUID->"f6bc0f21-8da1-46af-ac2a-261ae072dbf6"]
}, Open  ]],
Cell[179232, 5098, 395, 14, 35, "Text",ExpressionUUID->"75036ce8-b27b-4894-93a8-48bf024291ed"],
Cell[CellGroupData[{
Cell[179652, 5116, 965, 29, 46, "Input",ExpressionUUID->"9422799f-61b3-4673-a56d-ffb279f4d618"],
Cell[180620, 5147, 288, 4, 34, "Output",ExpressionUUID->"85d48937-ec06-4220-906d-16e3752b700e"]
}, Open  ]],
Cell[180923, 5154, 369, 13, 35, "Text",ExpressionUUID->"77ddc36e-acde-4d23-aba7-8955ba58a25b"],
Cell[CellGroupData[{
Cell[181317, 5171, 952, 29, 46, "Input",ExpressionUUID->"2789d114-67bf-4b15-a05e-37ee6704a3b8"],
Cell[182272, 5202, 289, 4, 57, "Output",ExpressionUUID->"bb1e506d-9f25-4fa2-88a4-e65288b03ecc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182610, 5212, 536, 8, 67, "Section",ExpressionUUID->"6fe944da-5442-4d3c-ae97-2e896cd25728"],
Cell[183149, 5222, 853, 15, 150, "Text",ExpressionUUID->"b5131f05-3773-4cfe-8ac8-58598c0be949"]
}, Open  ]]
}, Open  ]]
}
]
*)

